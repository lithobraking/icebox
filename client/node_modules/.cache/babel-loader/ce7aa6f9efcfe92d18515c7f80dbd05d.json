{"ast":null,"code":"import { useContext, useRef, createElement } from 'react';\nimport { MuiPickersAdapterContext } from './LocalizationProvider.js';\nimport { useTheme } from '@material-ui/core/styles';\nimport getThemeProps from '@material-ui/styles/getThemeProps'; // TODO uncomment when syntax will be allowed by next babel\n\nfunction checkUtils(utils)\n/* :asserts utils is MuiPickersAdapter */\n{\n  if (!utils) {\n    throw new Error('Can not find utils in context. It looks like you forgot to wrap your component in LocalizationProvider, or pass dateAdapter prop directly.');\n  }\n}\n\nfunction useUtils() {\n  var utils = useContext(MuiPickersAdapterContext);\n  checkUtils(utils);\n  return utils;\n}\n\nfunction useNow() {\n  var utils = useUtils();\n  var now = useRef(utils.date());\n  return now.current;\n}\n\nfunction withDefaultProps(_ref, Component) {\n  var name = _ref.name;\n  var componentName = name.replace('Mui', '');\n\n  var WithDefaultProps = function WithDefaultProps(props) {\n    var theme = useTheme();\n    var propsWithDefault = getThemeProps({\n      props: props,\n      theme: theme,\n      name: name\n    });\n    Component.displayName = componentName;\n    return /*#__PURE__*/createElement(Component, propsWithDefault);\n  };\n\n  WithDefaultProps.displayName = \"WithDefaultProps(\".concat(componentName, \")\");\n  return WithDefaultProps;\n}\n\nvar DIALOG_WIDTH = 320;\nvar DIALOG_WIDTH_WIDER = 325;\nvar VIEW_HEIGHT = 358;\nvar DAY_SIZE = 36;\nvar DAY_MARGIN = 2;\nvar IS_TOUCH_DEVICE_MEDIA = '@media (pointer: fine)';\nexport { DAY_MARGIN as D, IS_TOUCH_DEVICE_MEDIA as I, VIEW_HEIGHT as V, useNow as a, DAY_SIZE as b, DIALOG_WIDTH as c, DIALOG_WIDTH_WIDER as d, useUtils as u, withDefaultProps as w };","map":{"version":3,"sources":["../src/_shared/hooks/useUtils.ts","../src/_shared/withDefaultProps.tsx","../src/constants/dimensions.ts"],"names":["utils","React","checkUtils","useUtils","now","name","componentName","WithDefaultProps","theme","useTheme","propsWithDefault","getThemeProps","props","Component","React.createElement","DIALOG_WIDTH","DIALOG_WIDTH_WIDER","VIEW_HEIGHT","DAY_SIZE","DAY_MARGIN","IS_TOUCH_DEVICE_MEDIA"],"mappings":";;;+DAMA;;AACA,SAAA,UAAA,CAAA,KAAA;AAAqD;AAA0C;AAC7F,MAAI,CAAJ,KAAA,EAAY;AACV,UAAM,IAAA,KAAA,CAAN,4IAAM,CAAN;AAGD;AACF;;AAEM,SAAA,QAAA,GAAuC;AAC5C,MAAMA,KAAK,GAAGC,UAAAA,CAAd,wBAAcA,CAAd;AACAC,EAAAA,UAAU,CAAVA,KAAU,CAAVA;AAEA,SAAA,KAAA;AACD;;AAEM,SAAA,MAAA,GAAkB;AACvB,MAAMF,KAAK,GAAGG,QAAd,EAAA;AACA,MAAMC,GAAG,GAAGH,MAAAA,CAAaD,KAAK,CAA9B,IAAyBA,EAAbC,CAAZ;AAEA,SAAOG,GAAG,CAAV,OAAA;AACD;;ACvBM,SAAA,gBAAA,CAAA,IAAA,EAAA,SAAA,EAGQ;AAAA,MAFXC,IAEW,GAAA,IAAA,CAFXA,IAEW;AACb,MAAMC,aAAa,GAAGD,IAAI,CAAJA,OAAAA,CAAAA,KAAAA,EAAtB,EAAsBA,CAAtB;;AACA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,KAAA,EAAc;AACrC,QAAMC,KAAK,GAAGC,QAAd,EAAA;AACA,QAAMC,gBAAgB,GAAGC,aAAa,CAAiB;AACrDC,MAAAA,KAAK,EADgD,KAAA;AAErDJ,MAAAA,KAAK,EAFgD,KAAA;AAGrDH,MAAAA,IAAI,EAAJA;AAHqD,KAAjB,CAAtC;AAMAQ,IAAAA,SAAS,CAATA,WAAAA,GAAAA,aAAAA;AAEA,WAAA,aAAOC,aAAAA,CAAAA,SAAAA,EAAP,gBAAOA,CAAP;AAVF,GAAA;;AAaAP,EAAAA,gBAAgB,CAAhBA,WAAAA,GAAAA,oBAAAA,MAAAA,CAAAA,aAAAA,EAAAA,GAAAA,CAAAA;AACA,SAAA,gBAAA;AACD;;ICxBYQ,YAAY,GAAG,G;IAEfC,kBAAkB,GAAG,G;IAErBC,WAAW,GAAG,G;IAEdC,QAAQ,GAAG,E;IAEXC,UAAU,GAAG,C;IAEbC,qBAAqB,GAAG,wB","sourcesContent":["import * as React from 'react';\nimport { IUtils } from '@date-io/core/IUtils';\nimport { MuiPickersAdapterContext } from '../../LocalizationProvider';\n\nexport type MuiPickersAdapter<TDate = unknown> = IUtils<TDate>;\n\n// TODO uncomment when syntax will be allowed by next babel\nfunction checkUtils(utils: MuiPickersAdapter | null) /* :asserts utils is MuiPickersAdapter */ {\n  if (!utils) {\n    throw new Error(\n      'Can not find utils in context. It looks like you forgot to wrap your component in LocalizationProvider, or pass dateAdapter prop directly.'\n    );\n  }\n}\n\nexport function useUtils(): MuiPickersAdapter {\n  const utils = React.useContext(MuiPickersAdapterContext);\n  checkUtils(utils);\n\n  return utils!;\n}\n\nexport function useNow() {\n  const utils = useUtils();\n  const now = React.useRef(utils.date());\n\n  return now.current;\n}\n","import * as React from 'react';\nimport getThemeProps from '@material-ui/styles/getThemeProps';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport function withDefaultProps<T>(\n  { name }: { name: string },\n  Component: React.ComponentType<T>\n): React.FC<T> {\n  const componentName = name.replace('Mui', '');\n  const WithDefaultProps = (props: T) => {\n    const theme = useTheme();\n    const propsWithDefault = getThemeProps<any, T, string>({\n      props,\n      theme,\n      name,\n    });\n\n    Component.displayName = componentName;\n\n    return <Component {...propsWithDefault} />;\n  };\n\n  WithDefaultProps.displayName = `WithDefaultProps(${componentName})`;\n  return WithDefaultProps;\n}\n","export const DIALOG_WIDTH = 320;\n\nexport const DIALOG_WIDTH_WIDER = 325;\n\nexport const VIEW_HEIGHT = 358;\n\nexport const DAY_SIZE = 36;\n\nexport const DAY_MARGIN = 2;\n\nexport const IS_TOUCH_DEVICE_MEDIA = '@media (pointer: fine)';\n"]},"metadata":{},"sourceType":"module"}