{"ast":null,"code":"import { createContext, useMemo, createElement } from 'react';\nimport { func, oneOfType, object, string, node } from 'prop-types';\nvar MuiPickersAdapterContext = createContext(null);\n\nvar LocalizationProvider = function LocalizationProvider(props) {\n  var children = props.children,\n      Utils = props.dateAdapter,\n      dateFormats = props.dateFormats,\n      dateLibInstance = props.dateLibInstance,\n      locale = props.locale;\n  var utils = useMemo(function () {\n    return new Utils({\n      locale: locale,\n      formats: dateFormats,\n      instance: dateLibInstance\n    });\n  }, [Utils, locale, dateFormats, dateLibInstance]);\n  return /*#__PURE__*/createElement(MuiPickersAdapterContext.Provider, {\n    value: utils\n  }, children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? LocalizationProvider.propTypes = {\n  dateAdapter: func.isRequired,\n  locale: oneOfType([object, string]),\n\n  /**\n   * Your component tree.\n   */\n  children: node\n} : void 0;\nexport default LocalizationProvider;\nexport { MuiPickersAdapterContext };","map":{"version":3,"sources":["../src/LocalizationProvider.tsx"],"names":["MuiPickersAdapterContext","React","LocalizationProvider","children","Utils","dateFormats","dateLibInstance","locale","props","utils","formats","instance","dateAdapter","PropTypes"],"mappings":";;IAKaA,wBAAwB,GAAGC,aAAAA,CAAAA,IAAAA,C;;IAUlCC,oBAAyD,GAAG,SAA5DA,oBAA4D,CAAA,KAAA,EAAW;AAAA,MACnEC,QADmE,GACIK,KADJ,CAAA,QAAA;AAAA,MAC5CJ,KAD4C,GACII,KADJ,CAAA,WAAA;AAAA,MACrCH,WADqC,GACIG,KADJ,CAAA,WAAA;AAAA,MACxBF,eADwB,GACIE,KADJ,CAAA,eAAA;AAAA,MACPD,MADO,GACIC,KADJ,CAAA,MAAA;AAE3E,MAAMC,KAAK,GAAG,OAAA,CACZ,YAAA;AAAA,WAAM,IAAA,KAAA,CAAU;AAAEF,MAAAA,MAAM,EAAR,MAAA;AAAUG,MAAAA,OAAO,EAAjB,WAAA;AAAgCC,MAAAA,QAAQ,EAAEL;AAA1C,KAAV,CAAN;AADY,GAAA,EAEZ,CAAA,KAAA,EAAA,MAAA,EAAA,WAAA,EAFF,eAEE,CAFY,CAAd;AAKA,SAAA,aACE,aAAA,CAAC,wBAAD,CAAA,QAAA,EAAA;AAAmC,IAAA,KAAK,EAAEG;AAA1C,GAAA,EADF,QACE,CADF;AAGD,C;;AAED,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,oBAAoB,CAApB,SAAA,GAAiC;AAC/BG,EAAAA,WAAW,EAAEC,IAAAA,CADkB,UAAA;AAE/BN,EAAAA,MAAM,EAAEM,SAAAA,CAAoB,CAAA,MAAA,EAFG,MAEH,CAApBA,CAFuB;;AAG/B;;;AAGAV,EAAAA,QAAQ,EAAEU;AANqB,CAAjC,GAAA,KAAA,CAAA","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { DateIOFormats } from '@date-io/core/IUtils';\nimport { MuiPickersAdapter } from './_shared/hooks/useUtils';\n\nexport const MuiPickersAdapterContext = React.createContext<MuiPickersAdapter | null>(null);\n\nexport interface LocalizationProviderProps {\n  children?: React.ReactNode;\n  dateAdapter: new (...args: any) => MuiPickersAdapter;\n  dateFormats?: Partial<DateIOFormats>;\n  dateLibInstance?: any;\n  locale?: any;\n}\n\nconst LocalizationProvider: React.FC<LocalizationProviderProps> = (props) => {\n  const { children, dateAdapter: Utils, dateFormats, dateLibInstance, locale } = props;\n  const utils = React.useMemo(\n    () => new Utils({ locale, formats: dateFormats, instance: dateLibInstance }),\n    [Utils, locale, dateFormats, dateLibInstance]\n  );\n\n  return (\n    <MuiPickersAdapterContext.Provider value={utils}>{children}</MuiPickersAdapterContext.Provider>\n  );\n};\n\nLocalizationProvider.propTypes = {\n  dateAdapter: PropTypes.func.isRequired,\n  locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n} as any;\n\nexport default LocalizationProvider;\n"]},"metadata":{},"sourceType":"module"}