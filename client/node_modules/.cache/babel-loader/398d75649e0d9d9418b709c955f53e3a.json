{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { createElement, memo, Fragment, useRef, useContext, useEffect, useCallback, useState, useMemo, forwardRef } from 'react';\nimport { instanceOf, func, string, object, node, oneOf, bool, arrayOf } from 'prop-types';\nexport { default as LocalizationProvider, MuiPickersAdapterContext as MuiPickersContext } from './LocalizationProvider.js';\nimport { w as withDefaultProps, u as useUtils, D as DAY_MARGIN, a as useNow } from './dimensions-3ff816e9.js';\nexport { u as useUtils } from './dimensions-3ff816e9.js';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, fade, styled } from '@material-ui/core/styles';\nimport '@material-ui/core/Grid';\nimport '@material-ui/core/IconButton';\nimport '@material-ui/core/Toolbar';\nimport '@material-ui/core/utils';\nimport { P as PickerToolbar, T as ToolbarButton, A as ArrowSwitcher } from './ClockView-cfa6b504.js';\nexport { C as PickersClockView, a as TimePickerToolbar } from './ClockView-cfa6b504.js';\nimport '@material-ui/styles/getThemeProps';\nimport _slicedToArray from '@babel/runtime/helpers/esm/slicedToArray';\nimport '@babel/runtime/helpers/esm/typeof';\nimport { e as executeInTheNextEventLoopTick, m as mergeRefs } from './useCanAutoFocus-1eacc580.js';\nimport { d as defaultMinDate, a as defaultMaxDate, C as CalendarHeader, i as isWithinRange, b as isStartOfRange, c as isEndOfRange, u as useMaskedInput, e as useNextMonthDisabled, f as usePreviousMonthDisabled, g as useParsedDate, h as useCalendarState, j as isRangeValid, M as MobileKeyboardInputView, k as defaultReduceAnimations, v as validateDateRange, l as date, p as parseRangeInputValue } from './Picker-607b95da.js';\nexport { P as PickersBasePickers, m as PickersCalendarView } from './Picker-607b95da.js';\nexport { a as DatePicker, D as DatePickerToolbar, b as DesktopDatePicker, M as MobileDatePicker, S as StaticDatePicker } from './DatePicker-ba8d102d.js';\nimport '@material-ui/core/useMediaQuery';\nimport { m as makeValidationHook, a as makeWrapperComponent, w as withDateAdapterProp, u as usePickerState, R as ResponsiveTooltipWrapper, D as DesktopTooltipWrapper, M as MobileWrapper, S as StaticWrapper } from './makePickerWithState-ad2989cf.js';\nexport { u as usePickerState } from './makePickerWithState-ad2989cf.js';\nimport { W as WrapperVariantContext } from './Clock-30866969.js';\nexport { C as PickersClock } from './Clock-30866969.js';\nimport '@material-ui/core/Button';\nimport '@material-ui/core/DialogActions';\nimport '@material-ui/core/DialogContent';\nimport '@material-ui/core/Dialog';\nimport '@material-ui/core/InputAdornment';\nimport 'rifm';\nimport '@material-ui/core/Grow';\nimport '@material-ui/core/Paper';\nimport '@material-ui/core/Popper';\nimport '@material-ui/core/Unstable_TrapFocus';\nimport './useKeyDown-5aaf69f9.js';\nimport '@babel/runtime/helpers/esm/classCallCheck';\nimport '@babel/runtime/helpers/esm/createClass';\nimport '@babel/runtime/helpers/esm/inherits';\nimport '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport '@babel/runtime/helpers/esm/getPrototypeOf';\nimport '@material-ui/core/ButtonBase';\nimport 'react-transition-group';\nimport { areDayPropsEqual, Day } from './Day.js';\nexport { Day as PickersDay } from './Day.js';\nimport { Calendar } from './Calendar.js';\nexport { Calendar as PickersCalendar } from './Calendar.js';\nimport '@material-ui/core/Fade';\nexport { D as DesktopTimePicker, M as MobileTimePicker, S as StaticTimePicker, T as TimePicker, g as getTextFieldAriaText } from './TimePicker-a18787e6.js';\nimport '@material-ui/core/Tab';\nimport '@material-ui/core/Tabs';\nexport { a as DateTimePicker, D as DateTimePickerToolbar, b as DesktopDateTimePicker, M as MobileDateTimePicker, S as StaticDateTimePicker } from './DateTimePicker-47090bf2.js';\n\nfunction calculateRangeChange(_ref) {\n  var utils = _ref.utils,\n      range = _ref.range,\n      selectedDate = _ref.newDate,\n      currentlySelectingRangeEnd = _ref.currentlySelectingRangeEnd;\n\n  var _range = _slicedToArray(range, 2),\n      start = _range[0],\n      end = _range[1];\n\n  if (currentlySelectingRangeEnd === 'start') {\n    return Boolean(end) && utils.isAfter(selectedDate, end) ? {\n      nextSelection: 'end',\n      newRange: [selectedDate, null]\n    } : {\n      nextSelection: 'end',\n      newRange: [selectedDate, end]\n    };\n  }\n\n  return Boolean(start) && utils.isBefore(selectedDate, start) ? {\n    nextSelection: 'end',\n    newRange: [selectedDate, null]\n  } : {\n    nextSelection: 'start',\n    newRange: [start, selectedDate]\n  };\n}\n\nfunction calculateRangePreview(options) {\n  if (!options.newDate) {\n    return [null, null];\n  }\n\n  var _options$range = _slicedToArray(options.range, 2),\n      start = _options$range[0],\n      end = _options$range[1];\n\n  var _calculateRangeChange = calculateRangeChange(options),\n      newRange = _calculateRangeChange.newRange;\n\n  if (!start || !end) {\n    return newRange;\n  }\n\n  var _newRange = _slicedToArray(newRange, 2),\n      previewStart = _newRange[0],\n      previewEnd = _newRange[1];\n\n  return options.currentlySelectingRangeEnd === 'end' ? [end, previewEnd] : [previewStart, start];\n}\n\nvar muiComponentConfig = {\n  name: 'MuiPickersDateRangePickerToolbarProps'\n};\nvar useStyles = makeStyles({\n  root: {},\n  penIcon: {\n    position: 'relative',\n    top: 4\n  },\n  dateTextContainer: {\n    display: 'flex'\n  }\n}, muiComponentConfig);\nvar DateRangePickerToolbar = withDefaultProps(muiComponentConfig, function (_ref) {\n  var currentlySelectingRangeEnd = _ref.currentlySelectingRangeEnd,\n      _ref$date = _slicedToArray(_ref.date, 2),\n      start = _ref$date[0],\n      end = _ref$date[1],\n      endText = _ref.endText,\n      isMobileKeyboardViewOpen = _ref.isMobileKeyboardViewOpen,\n      setCurrentlySelectingRangeEnd = _ref.setCurrentlySelectingRangeEnd,\n      startText = _ref.startText,\n      toggleMobileKeyboardView = _ref.toggleMobileKeyboardView,\n      toolbarFormat = _ref.toolbarFormat,\n      _ref$toolbarTitle = _ref.toolbarTitle,\n      toolbarTitle = _ref$toolbarTitle === void 0 ? 'SELECT DATE RANGE' : _ref$toolbarTitle;\n\n  var utils = useUtils();\n  var classes = useStyles();\n  var startDateValue = start ? utils.formatByString(start, toolbarFormat || utils.formats.shortDate) : startText;\n  var endDateValue = end ? utils.formatByString(end, toolbarFormat || utils.formats.shortDate) : endText;\n  return /*#__PURE__*/createElement(PickerToolbar, {\n    className: classes.root,\n    toolbarTitle: toolbarTitle,\n    isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView: toggleMobileKeyboardView,\n    isLandscape: false,\n    penIconClassName: classes.penIcon\n  }, /*#__PURE__*/createElement(\"div\", {\n    className: classes.dateTextContainer\n  }, /*#__PURE__*/createElement(ToolbarButton, {\n    variant: start !== null ? 'h5' : 'h6',\n    value: startDateValue,\n    selected: currentlySelectingRangeEnd === 'start',\n    onClick: function onClick() {\n      return setCurrentlySelectingRangeEnd('start');\n    }\n  }), /*#__PURE__*/createElement(Typography, {\n    variant: \"h5\"\n  }, \"\\xA0\", 'â€“', \"\\xA0\"), /*#__PURE__*/createElement(ToolbarButton, {\n    variant: end !== null ? 'h5' : 'h6',\n    value: endDateValue,\n    selected: currentlySelectingRangeEnd === 'end',\n    onClick: function onClick() {\n      return setCurrentlySelectingRangeEnd('end');\n    }\n  })));\n});\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar endBorderStyle = {\n  borderTopRightRadius: '50%',\n  borderBottomRightRadius: '50%'\n};\nvar startBorderStyle = {\n  borderTopLeftRadius: '50%',\n  borderBottomLeftRadius: '50%'\n};\nvar useStyles$1 = makeStyles(function (theme) {\n  return {\n    root: {\n      '&:first-child $rangeIntervalDayPreview': _objectSpread(_objectSpread({}, startBorderStyle), {}, {\n        borderLeftColor: theme.palette.divider\n      }),\n      '&:last-child $rangeIntervalDayPreview': _objectSpread(_objectSpread({}, endBorderStyle), {}, {\n        borderRightColor: theme.palette.divider\n      })\n    },\n    rangeIntervalDayHighlight: {\n      borderRadius: 0,\n      color: theme.palette.primary.contrastText,\n      backgroundColor: fade(theme.palette.primary.light, 0.6),\n      '&:first-child': startBorderStyle,\n      '&:last-child': endBorderStyle\n    },\n    rangeIntervalDayHighlightStart: _objectSpread(_objectSpread({}, startBorderStyle), {}, {\n      paddingLeft: 0,\n      marginLeft: DAY_MARGIN / 2\n    }),\n    rangeIntervalDayHighlightEnd: _objectSpread(_objectSpread({}, endBorderStyle), {}, {\n      paddingRight: 0,\n      marginRight: DAY_MARGIN / 2\n    }),\n    day: {\n      // Required to overlap preview border\n      transform: 'scale(1.1)',\n      '& > *': {\n        transform: 'scale(0.9)'\n      }\n    },\n    dayOutsideRangeInterval: {\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.grey[500])\n      }\n    },\n    dayInsideRangeInterval: {\n      color: theme.palette.getContrastText(fade(theme.palette.primary.light, 0.6))\n    },\n    notSelectedDate: {\n      backgroundColor: 'transparent'\n    },\n    rangeIntervalPreview: {\n      // replace default day component margin with transparent border to avoid jumping on preview\n      border: '2px solid transparent'\n    },\n    rangeIntervalDayPreview: {\n      borderRadius: 0,\n      border: \"2px dashed \".concat(theme.palette.divider),\n      borderLeftColor: 'transparent',\n      borderRightColor: 'transparent',\n      '&$rangeIntervalDayPreviewStart': _objectSpread({\n        borderLeftColor: theme.palette.divider\n      }, startBorderStyle),\n      '&$rangeIntervalDayPreviewEnd': _objectSpread({\n        borderRightColor: theme.palette.divider\n      }, endBorderStyle)\n    },\n    rangeIntervalDayPreviewStart: {},\n    rangeIntervalDayPreviewEnd: {}\n  };\n}, {\n  name: 'MuiPickersDateRangeDay'\n});\n\nvar PureDateRangeDay = function PureDateRangeDay(props) {\n  var className = props.className,\n      day = props.day,\n      inCurrentMonth = props.inCurrentMonth,\n      isEndOfHighlighting = props.isEndOfHighlighting,\n      isEndOfPreviewing = props.isEndOfPreviewing,\n      isHighlighting = props.isHighlighting,\n      isPreviewing = props.isPreviewing,\n      isStartOfHighlighting = props.isStartOfHighlighting,\n      isStartOfPreviewing = props.isStartOfPreviewing,\n      selected = props.selected,\n      other = _objectWithoutProperties(props, [\"className\", \"day\", \"inCurrentMonth\", \"isEndOfHighlighting\", \"isEndOfPreviewing\", \"isHighlighting\", \"isPreviewing\", \"isStartOfHighlighting\", \"isStartOfPreviewing\", \"selected\"]);\n\n  var utils = useUtils();\n  var classes = useStyles$1();\n  var isEndOfMonth = utils.isSameDay(day, utils.endOfMonth(day));\n  var isStartOfMonth = utils.isSameDay(day, utils.startOfMonth(day));\n  var shouldRenderHighlight = isHighlighting && inCurrentMonth;\n  var shouldRenderPreview = isPreviewing && inCurrentMonth;\n  return /*#__PURE__*/createElement(\"div\", {\n    \"data-mui-test\": shouldRenderHighlight ? 'DateRangeHighlight' : undefined,\n    className: clsx(classes.root, (isEndOfHighlighting || isEndOfMonth) && classes.rangeIntervalDayHighlightEnd, (isStartOfHighlighting || isStartOfMonth) && classes.rangeIntervalDayHighlightStart, shouldRenderHighlight && classes.rangeIntervalDayHighlight)\n  }, /*#__PURE__*/createElement(\"div\", {\n    \"data-mui-test\": shouldRenderPreview ? 'DateRangePreview' : undefined,\n    className: clsx(classes.rangeIntervalPreview, (isEndOfPreviewing || isEndOfMonth) && classes.rangeIntervalDayPreviewEnd, (isStartOfPreviewing || isStartOfMonth) && classes.rangeIntervalDayPreviewStart, shouldRenderPreview && classes.rangeIntervalDayPreview)\n  }, /*#__PURE__*/createElement(Day, _extends({}, other, {\n    disableMargin: true,\n    allowSameDateSelection: true,\n    allowKeyboardControl: false,\n    day: day,\n    selected: selected,\n    inCurrentMonth: inCurrentMonth,\n    \"data-mui-test\": \"DateRangeDay\",\n    className: clsx(classes.day, className, !selected && [classes.notSelectedDate, isHighlighting && classes.dayInsideRangeInterval], !isHighlighting && classes.dayOutsideRangeInterval)\n  }))));\n};\n\nPureDateRangeDay.displayName = 'DateRangeDay';\nvar DateRangeDay = memo(PureDateRangeDay, function (prevProps, nextProps) {\n  return prevProps.isHighlighting === nextProps.isHighlighting && prevProps.isEndOfHighlighting === nextProps.isEndOfHighlighting && prevProps.isStartOfHighlighting === nextProps.isStartOfHighlighting && prevProps.isPreviewing === nextProps.isPreviewing && prevProps.isEndOfPreviewing === nextProps.isEndOfPreviewing && prevProps.isStartOfPreviewing === nextProps.isStartOfPreviewing && areDayPropsEqual(prevProps, nextProps);\n});\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$1(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar onlyDateView = ['date'];\n\nvar DateRangePickerViewMobile = function DateRangePickerViewMobile(_ref) {\n  var changeMonth = _ref.changeMonth,\n      date = _ref.date,\n      leftArrowButtonProps = _ref.leftArrowButtonProps,\n      leftArrowButtonText = _ref.leftArrowButtonText,\n      leftArrowIcon = _ref.leftArrowIcon,\n      __maxDate = _ref.maxDate,\n      __minDate = _ref.minDate,\n      onChange = _ref.onChange,\n      rightArrowButtonProps = _ref.rightArrowButtonProps,\n      rightArrowButtonText = _ref.rightArrowButtonText,\n      rightArrowIcon = _ref.rightArrowIcon,\n      _ref$renderDay = _ref.renderDay,\n      _renderDay = _ref$renderDay === void 0 ? function (_, props) {\n    return /*#__PURE__*/createElement(DateRangeDay, props);\n  } : _ref$renderDay,\n      other = _objectWithoutProperties(_ref, [\"changeMonth\", \"date\", \"leftArrowButtonProps\", \"leftArrowButtonText\", \"leftArrowIcon\", \"maxDate\", \"minDate\", \"onChange\", \"rightArrowButtonProps\", \"rightArrowButtonText\", \"rightArrowIcon\", \"renderDay\"]);\n\n  var utils = useUtils();\n\n  var minDate = __minDate || utils.date(defaultMinDate);\n\n  var maxDate = __maxDate || utils.date(defaultMaxDate);\n\n  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(CalendarHeader, _extends({\n    view: \"date\",\n    views: onlyDateView,\n    changeView: function changeView() {\n      return {};\n    },\n    onMonthChange: changeMonth,\n    leftArrowButtonProps: leftArrowButtonProps,\n    leftArrowButtonText: leftArrowButtonText,\n    leftArrowIcon: leftArrowIcon,\n    rightArrowButtonProps: rightArrowButtonProps,\n    rightArrowButtonText: rightArrowButtonText,\n    rightArrowIcon: rightArrowIcon,\n    minDate: minDate,\n    maxDate: maxDate\n  }, other)), /*#__PURE__*/createElement(Calendar, _extends({}, other, {\n    date: date,\n    onChange: onChange,\n    renderDay: function renderDay(day, _, DayProps) {\n      return _renderDay(day, _objectSpread$1({\n        isPreviewing: false,\n        isStartOfPreviewing: false,\n        isEndOfPreviewing: false,\n        isHighlighting: isWithinRange(utils, day, date),\n        isStartOfHighlighting: isStartOfRange(utils, day, date),\n        isEndOfHighlighting: isEndOfRange(utils, day, date)\n      }, DayProps));\n    }\n  })));\n};\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$2(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$2(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar useStyles$2 = makeStyles(function (theme) {\n  return {\n    root: _defineProperty({\n      display: 'flex',\n      alignItems: 'baseline'\n    }, theme.breakpoints.down('xs'), {\n      flexDirection: 'column',\n      alignItems: 'center'\n    }),\n    toLabelDelimiter: _defineProperty({\n      margin: '8px 0'\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 16px'\n    })\n  };\n}, {\n  name: 'MuiPickersDateRangePickerInput'\n});\n\nvar DateRangePickerInput = function DateRangePickerInput(_ref) {\n  var containerRef = _ref.containerRef,\n      currentlySelectingRangeEnd = _ref.currentlySelectingRangeEnd,\n      disableOpenPicker = _ref.disableOpenPicker,\n      endText = _ref.endText,\n      forwardedRef = _ref.forwardedRef,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      open = _ref.open,\n      openPicker = _ref.openPicker,\n      rawValue = _ref.rawValue,\n      _ref$rawValue = _slicedToArray(_ref.rawValue, 2),\n      start = _ref$rawValue[0],\n      end = _ref$rawValue[1],\n      readOnly = _ref.readOnly,\n      renderInput = _ref.renderInput,\n      setCurrentlySelectingRangeEnd = _ref.setCurrentlySelectingRangeEnd,\n      startText = _ref.startText,\n      TextFieldProps = _ref.TextFieldProps,\n      _ref$validationError = _slicedToArray(_ref.validationError, 2),\n      startValidationError = _ref$validationError[0],\n      endValidationError = _ref$validationError[1],\n      other = _objectWithoutProperties(_ref, [\"containerRef\", \"currentlySelectingRangeEnd\", \"disableOpenPicker\", \"endText\", \"forwardedRef\", \"onBlur\", \"onChange\", \"open\", \"openPicker\", \"rawValue\", \"rawValue\", \"readOnly\", \"renderInput\", \"setCurrentlySelectingRangeEnd\", \"startText\", \"TextFieldProps\", \"validationError\"]);\n\n  var utils = useUtils();\n  var classes = useStyles$2();\n  var startRef = useRef(null);\n  var endRef = useRef(null);\n  var wrapperVariant = useContext(WrapperVariantContext);\n  useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start') {\n      var _startRef$current;\n\n      (_startRef$current = startRef.current) === null || _startRef$current === void 0 ? void 0 : _startRef$current.focus();\n    } else if (currentlySelectingRangeEnd === 'end') {\n      var _endRef$current;\n\n      (_endRef$current = endRef.current) === null || _endRef$current === void 0 ? void 0 : _endRef$current.focus();\n    }\n  }, [currentlySelectingRangeEnd, open]); // TODO: rethink this approach. We do not need to wait for calendar to be updated to rerender input (looks like freezing)\n  // TODO: so simply break 1 react's commit phase in 2 (first for input and second for calendars) by executing onChange in the next tick\n\n  var lazyHandleChangeCallback = useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return executeInTheNextEventLoopTick(function () {\n      return onChange.apply(void 0, args);\n    });\n  }, [onChange]);\n\n  var handleStartChange = function handleStartChange(date, inputString) {\n    lazyHandleChangeCallback([date, utils.date(end)], inputString);\n  };\n\n  var handleEndChange = function handleEndChange(date, inputString) {\n    lazyHandleChangeCallback([utils.date(start), date], inputString);\n  };\n\n  var openRangeStartSelection = function openRangeStartSelection() {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n\n    if (!disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  var openRangeEndSelection = function openRangeEndSelection() {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n\n    if (!disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  var openOnFocus = wrapperVariant === 'desktop';\n  var startInputProps = useMaskedInput(_objectSpread$2(_objectSpread$2({}, other), {}, {\n    readOnly: readOnly,\n    rawValue: start,\n    onChange: handleStartChange,\n    label: startText,\n    validationError: startValidationError !== null,\n    TextFieldProps: _objectSpread$2(_objectSpread$2({}, TextFieldProps), {}, {\n      ref: startRef,\n      variant: 'outlined',\n      focused: open && currentlySelectingRangeEnd === 'start'\n    }),\n    inputProps: {\n      onClick: !openOnFocus ? openRangeStartSelection : undefined,\n      onFocus: openOnFocus ? openRangeStartSelection : undefined\n    }\n  }));\n  var endInputProps = useMaskedInput(_objectSpread$2(_objectSpread$2({}, other), {}, {\n    readOnly: readOnly,\n    label: endText,\n    rawValue: end,\n    onChange: handleEndChange,\n    validationError: endValidationError !== null,\n    TextFieldProps: _objectSpread$2(_objectSpread$2({}, TextFieldProps), {}, {\n      ref: endRef,\n      variant: 'outlined',\n      focused: open && currentlySelectingRangeEnd === 'end'\n    }),\n    inputProps: {\n      onClick: !openOnFocus ? openRangeEndSelection : undefined,\n      onFocus: openOnFocus ? openRangeEndSelection : undefined\n    }\n  }));\n  return /*#__PURE__*/createElement(\"div\", {\n    onBlur: onBlur,\n    className: classes.root,\n    ref: mergeRefs([containerRef, forwardedRef])\n  }, renderInput(startInputProps, endInputProps));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? DateRangePickerInput.propTypes = {\n  acceptRegex: instanceOf(RegExp),\n  getOpenDialogAriaText: func,\n  mask: string,\n  OpenPickerButtonProps: object,\n  openPickerIcon: node,\n  renderInput: func.isRequired,\n  rifmFormatter: func\n} : void 0;\n\nfunction ownKeys$3(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$3(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$3(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$3(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar useStyles$3 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    rangeCalendarContainer: {\n      '&:not(:last-child)': {\n        borderRight: \"2px solid \".concat(theme.palette.divider)\n      }\n    },\n    calendar: {\n      minWidth: 312,\n      minHeight: 288\n    },\n    arrowSwitcher: {\n      padding: '16px 16px 8px 16px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    }\n  };\n}, {\n  name: 'MuiPickersDesktopDateRangeCalendar'\n});\n\nfunction getCalendarsArray(calendars) {\n  switch (calendars) {\n    case 1:\n      return [0];\n\n    case 2:\n      return [0, 0];\n\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n\nvar DateRangePickerViewDesktop = function DateRangePickerViewDesktop(_ref) {\n  var date = _ref.date,\n      _ref$calendars = _ref.calendars,\n      calendars = _ref$calendars === void 0 ? 2 : _ref$calendars,\n      changeMonth = _ref.changeMonth,\n      leftArrowButtonProps = _ref.leftArrowButtonProps,\n      leftArrowButtonText = _ref.leftArrowButtonText,\n      leftArrowIcon = _ref.leftArrowIcon,\n      rightArrowButtonProps = _ref.rightArrowButtonProps,\n      rightArrowButtonText = _ref.rightArrowButtonText,\n      rightArrowIcon = _ref.rightArrowIcon,\n      onChange = _ref.onChange,\n      disableFuture = _ref.disableFuture,\n      disablePast = _ref.disablePast,\n      __minDate = _ref.minDate,\n      __maxDate = _ref.maxDate,\n      currentlySelectingRangeEnd = _ref.currentlySelectingRangeEnd,\n      currentMonth = _ref.currentMonth,\n      _ref$renderDay = _ref.renderDay,\n      _renderDay = _ref$renderDay === void 0 ? function (_, props) {\n    return /*#__PURE__*/createElement(DateRangeDay, props);\n  } : _ref$renderDay,\n      other = _objectWithoutProperties(_ref, [\"date\", \"calendars\", \"changeMonth\", \"leftArrowButtonProps\", \"leftArrowButtonText\", \"leftArrowIcon\", \"rightArrowButtonProps\", \"rightArrowButtonText\", \"rightArrowIcon\", \"onChange\", \"disableFuture\", \"disablePast\", \"minDate\", \"maxDate\", \"currentlySelectingRangeEnd\", \"currentMonth\", \"renderDay\"]);\n\n  var utils = useUtils();\n  var classes = useStyles$3();\n\n  var minDate = __minDate || utils.date(defaultMinDate);\n\n  var maxDate = __maxDate || utils.date(defaultMaxDate);\n\n  var _React$useState = useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      rangePreviewDay = _React$useState2[0],\n      setRangePreviewDay = _React$useState2[1];\n\n  var isNextMonthDisabled = useNextMonthDisabled(currentMonth, {\n    disableFuture: disableFuture,\n    maxDate: maxDate\n  });\n  var isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, {\n    disablePast: disablePast,\n    minDate: minDate\n  });\n  var previewingRange = calculateRangePreview({\n    utils: utils,\n    range: date,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd: currentlySelectingRangeEnd\n  });\n  var handleDayChange = useCallback(function (day) {\n    setRangePreviewDay(null);\n    onChange(day);\n  }, [onChange]);\n\n  var handlePreviewDayChange = function handlePreviewDayChange(newPreviewRequest) {\n    if (!isWithinRange(utils, newPreviewRequest, date)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  var CalendarTransitionProps = useMemo(function () {\n    return {\n      onMouseLeave: function onMouseLeave() {\n        return setRangePreviewDay(null);\n      }\n    };\n  }, []);\n  var selectNextMonth = useCallback(function () {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  var selectPreviousMonth = useCallback(function () {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  return /*#__PURE__*/createElement(\"div\", {\n    className: classes.root\n  }, getCalendarsArray(calendars).map(function (_, index) {\n    var monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n    return /*#__PURE__*/createElement(\"div\", {\n      key: index,\n      className: classes.rangeCalendarContainer\n    }, /*#__PURE__*/createElement(ArrowSwitcher, {\n      className: classes.arrowSwitcher,\n      onLeftClick: selectPreviousMonth,\n      onRightClick: selectNextMonth,\n      isLeftHidden: index !== 0,\n      isRightHidden: index !== calendars - 1,\n      isLeftDisabled: isPreviousMonthDisabled,\n      isRightDisabled: isNextMonthDisabled,\n      leftArrowButtonProps: leftArrowButtonProps,\n      leftArrowButtonText: leftArrowButtonText,\n      leftArrowIcon: leftArrowIcon,\n      rightArrowButtonProps: rightArrowButtonProps,\n      rightArrowButtonText: rightArrowButtonText,\n      rightArrowIcon: rightArrowIcon,\n      text: utils.format(monthOnIteration, 'monthAndYear')\n    }), /*#__PURE__*/createElement(Calendar, _extends({}, other, {\n      key: index,\n      date: date,\n      className: classes.calendar,\n      onChange: handleDayChange,\n      currentMonth: monthOnIteration,\n      TransitionProps: CalendarTransitionProps,\n      renderDay: function renderDay(day, __, DayProps) {\n        return _renderDay(day, _objectSpread$3({\n          isPreviewing: isWithinRange(utils, day, previewingRange),\n          isStartOfPreviewing: isStartOfRange(utils, day, previewingRange),\n          isEndOfPreviewing: isEndOfRange(utils, day, previewingRange),\n          isHighlighting: isWithinRange(utils, day, date),\n          isStartOfHighlighting: isStartOfRange(utils, day, date),\n          isEndOfHighlighting: isEndOfRange(utils, day, date),\n          onMouseEnter: function onMouseEnter() {\n            return handlePreviewDayChange(day);\n          }\n        }, DayProps));\n      }\n    })));\n  }));\n};\n\nfunction ownKeys$4(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$4(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$4(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$4(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar DateRangePickerView = function DateRangePickerView(_ref) {\n  var _ref$calendars = _ref.calendars,\n      calendars = _ref$calendars === void 0 ? 2 : _ref$calendars,\n      className = _ref.className,\n      currentlySelectingRangeEnd = _ref.currentlySelectingRangeEnd,\n      date = _ref.date,\n      DateInputProps = _ref.DateInputProps,\n      _ref$disableAutoMonth = _ref.disableAutoMonthSwitching,\n      disableAutoMonthSwitching = _ref$disableAutoMonth === void 0 ? false : _ref$disableAutoMonth,\n      disableFuture = _ref.disableFuture,\n      disableHighlightToday = _ref.disableHighlightToday,\n      disablePast = _ref.disablePast,\n      endText = _ref.endText,\n      isMobileKeyboardViewOpen = _ref.isMobileKeyboardViewOpen,\n      _ref$maxDate = _ref.maxDate,\n      unparsedMaxDate = _ref$maxDate === void 0 ? defaultMaxDate : _ref$maxDate,\n      _ref$minDate = _ref.minDate,\n      unparsedMinDate = _ref$minDate === void 0 ? defaultMinDate : _ref$minDate,\n      onDateChange = _ref.onDateChange,\n      onMonthChange = _ref.onMonthChange,\n      open = _ref.open,\n      _ref$reduceAnimations = _ref.reduceAnimations,\n      reduceAnimations = _ref$reduceAnimations === void 0 ? defaultReduceAnimations : _ref$reduceAnimations,\n      setCurrentlySelectingRangeEnd = _ref.setCurrentlySelectingRangeEnd,\n      shouldDisableDate = _ref.shouldDisableDate,\n      showToolbar = _ref.showToolbar,\n      startText = _ref.startText,\n      toggleMobileKeyboardView = _ref.toggleMobileKeyboardView,\n      toolbarFormat = _ref.toolbarFormat,\n      toolbarTitle = _ref.toolbarTitle,\n      other = _objectWithoutProperties(_ref, [\"calendars\", \"className\", \"currentlySelectingRangeEnd\", \"date\", \"DateInputProps\", \"disableAutoMonthSwitching\", \"disableFuture\", \"disableHighlightToday\", \"disablePast\", \"endText\", \"isMobileKeyboardViewOpen\", \"maxDate\", \"minDate\", \"onDateChange\", \"onMonthChange\", \"open\", \"reduceAnimations\", \"setCurrentlySelectingRangeEnd\", \"shouldDisableDate\", \"showToolbar\", \"startText\", \"toggleMobileKeyboardView\", \"toolbarFormat\", \"toolbarTitle\"]);\n\n  var now = useNow();\n  var utils = useUtils();\n  var wrapperVariant = useContext(WrapperVariantContext);\n  var minDate = useParsedDate(unparsedMinDate);\n  var maxDate = useParsedDate(unparsedMaxDate);\n\n  var _date = _slicedToArray(date, 2),\n      start = _date[0],\n      end = _date[1];\n\n  var _useCalendarState = useCalendarState({\n    date: start || end || now,\n    minDate: minDate,\n    maxDate: maxDate,\n    reduceAnimations: reduceAnimations,\n    disablePast: disablePast,\n    disableFuture: disableFuture,\n    onMonthChange: onMonthChange,\n    shouldDisableDate: shouldDisableDate,\n    disableSwitchToMonthOnDayFocus: true\n  }),\n      changeMonth = _useCalendarState.changeMonth,\n      calendarState = _useCalendarState.calendarState,\n      isDateDisabled = _useCalendarState.isDateDisabled,\n      onMonthSwitchingAnimationEnd = _useCalendarState.onMonthSwitchingAnimationEnd,\n      changeFocusedDay = _useCalendarState.changeFocusedDay;\n\n  var toShowToolbar = showToolbar !== null && showToolbar !== void 0 ? showToolbar : wrapperVariant !== 'desktop';\n\n  var scrollToDayIfNeeded = function scrollToDayIfNeeded(day) {\n    if (!utils.isValid(day) || isDateDisabled(day)) {\n      return;\n    }\n\n    var displayingMonthRange = wrapperVariant === 'mobile' ? 0 : calendars - 1;\n    var currentMonthNumber = utils.getMonth(calendarState.currentMonth);\n    var requestedMonthNumber = utils.getMonth(day);\n\n    if (!utils.isSameYear(calendarState.currentMonth, day) || requestedMonthNumber < currentMonthNumber || requestedMonthNumber > currentMonthNumber + displayingMonthRange) {\n      var newMonth = currentlySelectingRangeEnd === 'start' ? start : // If need to focus end, scroll to the state when \"end\" is displaying in the last calendar\n      utils.addMonths(end, -displayingMonthRange);\n      changeMonth(newMonth);\n    }\n  };\n\n  useEffect(function () {\n    if (disableAutoMonthSwitching || !open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start' && start === null || currentlySelectingRangeEnd === 'end' && end === null) {\n      return;\n    }\n\n    scrollToDayIfNeeded(currentlySelectingRangeEnd === 'start' ? start : end);\n  }, [currentlySelectingRangeEnd, date]); // eslint-disable-line\n\n  var handleChange = useCallback(function (newDate) {\n    var _calculateRangeChange = calculateRangeChange({\n      newDate: newDate,\n      utils: utils,\n      range: date,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd\n    }),\n        nextSelection = _calculateRangeChange.nextSelection,\n        newRange = _calculateRangeChange.newRange;\n\n    setCurrentlySelectingRangeEnd(nextSelection);\n    var isFullRangeSelected = currentlySelectingRangeEnd === 'end' && isRangeValid(utils, newRange);\n    onDateChange(newRange, wrapperVariant, isFullRangeSelected ? 'finish' : 'partial');\n  }, [currentlySelectingRangeEnd, date, onDateChange, setCurrentlySelectingRangeEnd, utils, wrapperVariant]);\n\n  var renderView = function renderView() {\n    var sharedCalendarProps = _objectSpread$4(_objectSpread$4({\n      date: date,\n      isDateDisabled: isDateDisabled,\n      changeFocusedDay: changeFocusedDay,\n      onChange: handleChange,\n      reduceAnimations: reduceAnimations,\n      disableHighlightToday: disableHighlightToday,\n      onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n      changeMonth: changeMonth,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      disableFuture: disableFuture,\n      disablePast: disablePast,\n      minDate: minDate,\n      maxDate: maxDate\n    }, calendarState), other);\n\n    switch (wrapperVariant) {\n      case 'desktop':\n        {\n          return /*#__PURE__*/createElement(DateRangePickerViewDesktop, _extends({\n            calendars: calendars\n          }, sharedCalendarProps));\n        }\n\n      default:\n        {\n          return /*#__PURE__*/createElement(DateRangePickerViewMobile, sharedCalendarProps);\n        }\n    }\n  };\n\n  return /*#__PURE__*/createElement(\"div\", {\n    className: className\n  }, toShowToolbar && /*#__PURE__*/createElement(DateRangePickerToolbar, {\n    date: date,\n    isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView: toggleMobileKeyboardView,\n    currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n    setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n    startText: startText,\n    endText: endText,\n    toolbarTitle: toolbarTitle,\n    toolbarFormat: toolbarFormat\n  }), isMobileKeyboardViewOpen ? /*#__PURE__*/createElement(MobileKeyboardInputView, null, /*#__PURE__*/createElement(DateRangePickerInput, _extends({\n    disableOpenPicker: true,\n    ignoreInvalidInputs: true\n  }, DateInputProps))) : renderView());\n};\n\nprocess.env.NODE_ENV !== \"production\" ? DateRangePickerView.propTypes = {\n  calendars: oneOf([1, 2, 3]),\n  disableAutoMonthSwitching: bool\n} : void 0;\nvar DateRangeDelimiter = withDefaultProps({\n  name: 'MuiPickersDateRangeDelimiter'\n}, styled(Typography)({\n  margin: '0 16px'\n}));\n\nfunction ownKeys$5(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$5(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$5(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$5(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar useDateRangeValidation = makeValidationHook(validateDateRange, {\n  defaultValidationError: [null, null],\n  isSameError: function isSameError(a, b) {\n    return a[1] === b[1] && a[0] === b[0];\n  }\n});\n\nfunction makeRangePicker(name, Wrapper) {\n  var WrapperComponent = makeWrapperComponent(Wrapper, {\n    KeyboardDateInputComponent: DateRangePickerInput,\n    PureDateInputComponent: DateRangePickerInput\n  });\n  var rangePickerValueManager = {\n    emptyValue: [null, null],\n    parseInput: parseRangeInputValue,\n    areValuesEqual: function areValuesEqual(utils, a, b) {\n      return utils.isEqual(a[0], b[0]) && utils.isEqual(a[1], b[1]);\n    }\n  };\n\n  function RangePickerWithStateAndWrapper(_ref) {\n    var calendars = _ref.calendars,\n        value = _ref.value,\n        onChange = _ref.onChange,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === void 0 ? '__/__/____' : _ref$mask,\n        _ref$startText = _ref.startText,\n        startText = _ref$startText === void 0 ? 'Start' : _ref$startText,\n        _ref$endText = _ref.endText,\n        endText = _ref$endText === void 0 ? 'End' : _ref$endText,\n        passedInputFormat = _ref.inputFormat,\n        _ref$minDate = _ref.minDate,\n        __minDate = _ref$minDate === void 0 ? defaultMinDate : _ref$minDate,\n        _ref$maxDate = _ref.maxDate,\n        __maxDate = _ref$maxDate === void 0 ? defaultMaxDate : _ref$maxDate,\n        other = _objectWithoutProperties(_ref, [\"calendars\", \"value\", \"onChange\", \"mask\", \"startText\", \"endText\", \"inputFormat\", \"minDate\", \"maxDate\"]);\n\n    var utils = useUtils();\n    var minDate = useParsedDate(__minDate);\n    var maxDate = useParsedDate(__maxDate);\n\n    var _React$useState = useState('start'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        currentlySelectingRangeEnd = _React$useState2[0],\n        setCurrentlySelectingRangeEnd = _React$useState2[1];\n\n    var pickerStateProps = _objectSpread$5(_objectSpread$5({}, other), {}, {\n      value: value,\n      onChange: onChange,\n      inputFormat: passedInputFormat || utils.formats.keyboardDate\n    });\n\n    var restProps = _objectSpread$5(_objectSpread$5({}, other), {}, {\n      minDate: minDate,\n      maxDate: maxDate\n    });\n\n    var _usePickerState = usePickerState(pickerStateProps, rangePickerValueManager),\n        pickerProps = _usePickerState.pickerProps,\n        inputProps = _usePickerState.inputProps,\n        wrapperProps = _usePickerState.wrapperProps;\n\n    var validationError = useDateRangeValidation(value, restProps);\n\n    var DateInputProps = _objectSpread$5(_objectSpread$5(_objectSpread$5({}, inputProps), restProps), {}, {\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n      startText: startText,\n      endText: endText,\n      mask: mask,\n      validationError: validationError\n    });\n\n    return /*#__PURE__*/createElement(WrapperComponent, _extends({\n      wrapperProps: wrapperProps,\n      DateInputProps: DateInputProps\n    }, restProps), /*#__PURE__*/createElement(DateRangePickerView, _extends({\n      open: wrapperProps.open,\n      DateInputProps: DateInputProps,\n      calendars: calendars,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n      startText: startText,\n      endText: endText\n    }, pickerProps, restProps)));\n  }\n\n  process.env.NODE_ENV !== \"production\" ? RangePickerWithStateAndWrapper.propTypes = {\n    value: arrayOf(date).isRequired,\n    onChange: func.isRequired,\n    startText: node,\n    endText: node\n  } : void 0;\n  var FinalPickerComponent = withDefaultProps({\n    name: name\n  }, withDateAdapterProp(RangePickerWithStateAndWrapper)); // @ts-ignore @see lib/src/Picker/makePickerWithState.tsx:95\n\n  return forwardRef(function (props, ref) {\n    return /*#__PURE__*/createElement(FinalPickerComponent, _extends({}, props, {\n      forwardedRef: ref\n    }));\n  });\n}\n\nvar DateRangePicker = makeRangePicker('MuiPickersDateRangePicker', ResponsiveTooltipWrapper);\nvar DesktopDateRangePicker = makeRangePicker('MuiDesktopDateRangePicker', DesktopTooltipWrapper);\nvar MobileDateRangePicker = makeRangePicker('MuiMobileDateRangePicker', MobileWrapper);\nvar StaticDateRangePicker = makeRangePicker('MuiStaticDateRangePicker', StaticWrapper);\nexport { DateRangeDelimiter, DateRangePicker, DateRangePickerToolbar, DesktopDateRangePicker, MobileDateRangePicker, StaticDateRangePicker, makeRangePicker, useDateRangeValidation };","map":{"version":3,"sources":["../src/DateRangePicker/date-range-manager.ts","../src/DateRangePicker/DateRangePickerToolbar.tsx","../src/DateRangePicker/DateRangePickerDay.tsx","../src/DateRangePicker/DateRangePickerViewMobile.tsx","../src/DateRangePicker/DateRangePickerInput.tsx","../src/DateRangePicker/DateRangePickerViewDesktop.tsx","../src/DateRangePicker/DateRangePickerView.tsx","../src/DateRangePicker/DateRangeDelimiter.tsx","../src/DateRangePicker/DateRangePicker.tsx"],"names":["utils","range","newDate","selectedDate","currentlySelectingRangeEnd","start","end","nextSelection","newRange","options","calculateRangeChange","previewStart","previewEnd","muiComponentConfig","name","useStyles","makeStyles","root","penIcon","position","top","dateTextContainer","display","DateRangePickerToolbar","withDefaultProps","date","endText","isMobileKeyboardViewOpen","setCurrentlySelectingRangeEnd","startText","toggleMobileKeyboardView","toolbarFormat","toolbarTitle","useUtils","classes","startDateValue","endDateValue","endBorderStyle","borderTopRightRadius","borderBottomRightRadius","startBorderStyle","borderTopLeftRadius","borderBottomLeftRadius","borderLeftColor","theme","divider","borderRightColor","rangeIntervalDayHighlight","borderRadius","color","backgroundColor","fade","rangeIntervalDayHighlightStart","paddingLeft","marginLeft","DAY_MARGIN","rangeIntervalDayHighlightEnd","paddingRight","marginRight","day","transform","dayOutsideRangeInterval","border","dayInsideRangeInterval","notSelectedDate","rangeIntervalPreview","rangeIntervalDayPreview","rangeIntervalDayPreviewStart","rangeIntervalDayPreviewEnd","PureDateRangeDay","className","inCurrentMonth","isEndOfHighlighting","isEndOfPreviewing","isHighlighting","isPreviewing","isStartOfHighlighting","isStartOfPreviewing","selected","other","props","isEndOfMonth","isStartOfMonth","shouldRenderHighlight","shouldRenderPreview","clsx","DateRangeDay","prevProps","nextProps","areDayPropsEqual","onlyDateView","DateRangePickerViewMobile","changeMonth","leftArrowButtonProps","leftArrowButtonText","leftArrowIcon","maxDate","__maxDate","minDate","__minDate","onChange","rightArrowButtonProps","rightArrowButtonText","rightArrowIcon","renderDay","React.createElement","isWithinRange","isStartOfRange","isEndOfRange","alignItems","flexDirection","toLabelDelimiter","margin","DateRangePickerInput","containerRef","disableOpenPicker","forwardedRef","onBlur","open","openPicker","rawValue","readOnly","renderInput","TextFieldProps","validationError","startValidationError","endValidationError","startRef","React","endRef","wrapperVariant","lazyHandleChangeCallback","args","executeInTheNextEventLoopTick","handleStartChange","handleEndChange","openRangeStartSelection","openRangeEndSelection","openOnFocus","startInputProps","useMaskedInput","label","ref","variant","focused","inputProps","onClick","onFocus","undefined","endInputProps","mergeRefs","acceptRegex","PropTypes","getOpenDialogAriaText","mask","OpenPickerButtonProps","openPickerIcon","rifmFormatter","rangeCalendarContainer","borderRight","calendar","minWidth","minHeight","arrowSwitcher","padding","justifyContent","DateRangePickerViewDesktop","calendars","disableFuture","disablePast","currentMonth","rangePreviewDay","setRangePreviewDay","isNextMonthDisabled","useNextMonthDisabled","isPreviousMonthDisabled","usePreviousMonthDisabled","previewingRange","calculateRangePreview","handleDayChange","handlePreviewDayChange","CalendarTransitionProps","onMouseLeave","selectNextMonth","selectPreviousMonth","monthOnIteration","index","onMouseEnter","DateRangePickerView","DateInputProps","disableAutoMonthSwitching","disableHighlightToday","unparsedMaxDate","defaultMaxDate","unparsedMinDate","defaultMinDate","onDateChange","onMonthChange","reduceAnimations","defaultReduceAnimations","shouldDisableDate","showToolbar","now","useNow","useParsedDate","calendarState","isDateDisabled","onMonthSwitchingAnimationEnd","changeFocusedDay","useCalendarState","disableSwitchToMonthOnDayFocus","toShowToolbar","scrollToDayIfNeeded","displayingMonthRange","currentMonthNumber","requestedMonthNumber","newMonth","handleChange","isFullRangeSelected","isRangeValid","renderView","sharedCalendarProps","DateRangeDelimiter","useDateRangeValidation","makeValidationHook","defaultValidationError","isSameError","a","b","WrapperComponent","makeWrapperComponent","KeyboardDateInputComponent","PureDateInputComponent","rangePickerValueManager","emptyValue","parseInput","areValuesEqual","value","inputFormat","passedInputFormat","pickerStateProps","keyboardDate","restProps","pickerProps","wrapperProps","usePickerState","FinalPickerComponent","withDateAdapterProp","DateRangePicker","makeRangePicker","DesktopDateRangePicker","MobileDateRangePicker","StaticDateRangePicker"],"mappings":"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","sourcesContent":["import { DateRange } from './RangeTypes';\nimport { MuiPickersAdapter } from '../_shared/hooks/useUtils';\n\ninterface CalculateRangeChangeOptions {\n  utils: MuiPickersAdapter;\n  range: DateRange;\n  newDate: unknown;\n  currentlySelectingRangeEnd: 'start' | 'end';\n}\n\nexport function calculateRangeChange({\n  utils,\n  range,\n  newDate: selectedDate,\n  currentlySelectingRangeEnd,\n}: CalculateRangeChangeOptions): { nextSelection: 'start' | 'end'; newRange: DateRange } {\n  const [start, end] = range;\n\n  if (currentlySelectingRangeEnd === 'start') {\n    return Boolean(end) && utils.isAfter(selectedDate, end)\n      ? { nextSelection: 'end', newRange: [selectedDate, null] }\n      : { nextSelection: 'end', newRange: [selectedDate, end] };\n  }\n\n  return Boolean(start) && utils.isBefore(selectedDate, start)\n    ? { nextSelection: 'end', newRange: [selectedDate, null] }\n    : { nextSelection: 'start', newRange: [start, selectedDate] };\n}\n\nexport function calculateRangePreview(options: CalculateRangeChangeOptions): DateRange {\n  if (!options.newDate) {\n    return [null, null];\n  }\n\n  const [start, end] = options.range;\n  const { newRange } = calculateRangeChange(options);\n\n  if (!start || !end) {\n    return newRange;\n  }\n\n  const [previewStart, previewEnd] = newRange;\n  return options.currentlySelectingRangeEnd === 'end' ? [end, previewEnd] : [previewStart, start];\n}\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PickerToolbar from '../_shared/PickerToolbar';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { ToolbarButton } from '../_shared/ToolbarButton';\nimport { withDefaultProps } from '../_shared/withDefaultProps';\nimport { ToolbarComponentProps } from '../Picker/SharedPickerProps';\nimport { DateRange, CurrentlySelectingRangeEndProps } from './RangeTypes';\n\nconst muiComponentConfig = { name: 'MuiPickersDateRangePickerToolbarProps' };\nexport const useStyles = makeStyles(\n  {\n    root: {},\n    penIcon: {\n      position: 'relative',\n      top: 4,\n    },\n    dateTextContainer: {\n      display: 'flex',\n    },\n  },\n  muiComponentConfig\n);\n\ninterface DateRangePickerToolbarProps\n  extends CurrentlySelectingRangeEndProps,\n    Pick<\n      ToolbarComponentProps,\n      'isMobileKeyboardViewOpen' | 'toggleMobileKeyboardView' | 'toolbarTitle' | 'toolbarFormat'\n    > {\n  date: DateRange;\n  startText: React.ReactNode;\n  endText: React.ReactNode;\n  currentlySelectingRangeEnd: 'start' | 'end';\n  setCurrentlySelectingRangeEnd: (newSelectingEnd: 'start' | 'end') => void;\n}\n\nexport const DateRangePickerToolbar: React.FC<DateRangePickerToolbarProps> = withDefaultProps(\n  muiComponentConfig,\n  ({\n    currentlySelectingRangeEnd,\n    date: [start, end],\n    endText,\n    isMobileKeyboardViewOpen,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    toggleMobileKeyboardView,\n    toolbarFormat,\n    toolbarTitle = 'SELECT DATE RANGE',\n  }) => {\n    const utils = useUtils();\n    const classes = useStyles();\n\n    const startDateValue = start\n      ? utils.formatByString(start, toolbarFormat || utils.formats.shortDate)\n      : startText;\n\n    const endDateValue = end\n      ? utils.formatByString(end, toolbarFormat || utils.formats.shortDate)\n      : endText;\n\n    return (\n      <PickerToolbar\n        className={classes.root}\n        toolbarTitle={toolbarTitle}\n        isMobileKeyboardViewOpen={isMobileKeyboardViewOpen}\n        toggleMobileKeyboardView={toggleMobileKeyboardView}\n        isLandscape={false}\n        penIconClassName={classes.penIcon}\n      >\n        <div className={classes.dateTextContainer}>\n          <ToolbarButton\n            variant={start !== null ? 'h5' : 'h6'}\n            value={startDateValue}\n            selected={currentlySelectingRangeEnd === 'start'}\n            onClick={() => setCurrentlySelectingRangeEnd('start')}\n          />\n          <Typography variant=\"h5\">&nbsp;{'â€“'}&nbsp;</Typography>\n          <ToolbarButton\n            variant={end !== null ? 'h5' : 'h6'}\n            value={endDateValue}\n            selected={currentlySelectingRangeEnd === 'end'}\n            onClick={() => setCurrentlySelectingRangeEnd('end')}\n          />\n        </div>\n      </PickerToolbar>\n    );\n  }\n);\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport { DAY_MARGIN } from '../constants/dimensions';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { Day, DayProps, areDayPropsEqual } from '../views/Calendar/Day';\n\nexport interface DateRangeDayProps extends DayProps {\n  isHighlighting: boolean;\n  isEndOfHighlighting: boolean;\n  isStartOfHighlighting: boolean;\n  isPreviewing: boolean;\n  isEndOfPreviewing: boolean;\n  isStartOfPreviewing: boolean;\n}\n\nconst endBorderStyle = {\n  borderTopRightRadius: '50%',\n  borderBottomRightRadius: '50%',\n};\n\nconst startBorderStyle = {\n  borderTopLeftRadius: '50%',\n  borderBottomLeftRadius: '50%',\n};\n\nconst useStyles = makeStyles(\n  (theme) => ({\n    root: {\n      '&:first-child $rangeIntervalDayPreview': {\n        ...startBorderStyle,\n        borderLeftColor: theme.palette.divider,\n      },\n      '&:last-child $rangeIntervalDayPreview': {\n        ...endBorderStyle,\n        borderRightColor: theme.palette.divider,\n      },\n    },\n    rangeIntervalDayHighlight: {\n      borderRadius: 0,\n      color: theme.palette.primary.contrastText,\n      backgroundColor: fade(theme.palette.primary.light, 0.6),\n      '&:first-child': startBorderStyle,\n      '&:last-child': endBorderStyle,\n    },\n    rangeIntervalDayHighlightStart: {\n      ...startBorderStyle,\n      paddingLeft: 0,\n      marginLeft: DAY_MARGIN / 2,\n    },\n    rangeIntervalDayHighlightEnd: {\n      ...endBorderStyle,\n      paddingRight: 0,\n      marginRight: DAY_MARGIN / 2,\n    },\n    day: {\n      // Required to overlap preview border\n      transform: 'scale(1.1)',\n      '& > *': {\n        transform: 'scale(0.9)',\n      },\n    },\n    dayOutsideRangeInterval: {\n      '&:hover': {\n        border: `1px solid ${theme.palette.grey[500]}`,\n      },\n    },\n    dayInsideRangeInterval: {\n      color: theme.palette.getContrastText(fade(theme.palette.primary.light, 0.6)),\n    },\n    notSelectedDate: {\n      backgroundColor: 'transparent',\n    },\n    rangeIntervalPreview: {\n      // replace default day component margin with transparent border to avoid jumping on preview\n      border: '2px solid transparent',\n    },\n    rangeIntervalDayPreview: {\n      borderRadius: 0,\n      border: `2px dashed ${theme.palette.divider}`,\n      borderLeftColor: 'transparent',\n      borderRightColor: 'transparent',\n\n      '&$rangeIntervalDayPreviewStart': {\n        borderLeftColor: theme.palette.divider,\n        ...startBorderStyle,\n      },\n      '&$rangeIntervalDayPreviewEnd': {\n        borderRightColor: theme.palette.divider,\n        ...endBorderStyle,\n      },\n    },\n    rangeIntervalDayPreviewStart: {},\n    rangeIntervalDayPreviewEnd: {},\n  }),\n  { name: 'MuiPickersDateRangeDay' }\n);\n\nexport const PureDateRangeDay = (props: DateRangeDayProps) => {\n  const {\n    className,\n    day,\n    inCurrentMonth,\n    isEndOfHighlighting,\n    isEndOfPreviewing,\n    isHighlighting,\n    isPreviewing,\n    isStartOfHighlighting,\n    isStartOfPreviewing,\n    selected,\n    ...other\n  } = props;\n  const utils = useUtils();\n  const classes = useStyles();\n\n  const isEndOfMonth = utils.isSameDay(day, utils.endOfMonth(day));\n  const isStartOfMonth = utils.isSameDay(day, utils.startOfMonth(day));\n\n  const shouldRenderHighlight = isHighlighting && inCurrentMonth;\n  const shouldRenderPreview = isPreviewing && inCurrentMonth;\n\n  return (\n    <div\n      data-mui-test={shouldRenderHighlight ? 'DateRangeHighlight' : undefined}\n      className={clsx(classes.root, {\n        [classes.rangeIntervalDayHighlight]: shouldRenderHighlight,\n        [classes.rangeIntervalDayHighlightEnd]: isEndOfHighlighting || isEndOfMonth,\n        [classes.rangeIntervalDayHighlightStart]: isStartOfHighlighting || isStartOfMonth,\n      })}\n    >\n      <div\n        data-mui-test={shouldRenderPreview ? 'DateRangePreview' : undefined}\n        className={clsx(classes.rangeIntervalPreview, {\n          [classes.rangeIntervalDayPreview]: shouldRenderPreview,\n          [classes.rangeIntervalDayPreviewEnd]: isEndOfPreviewing || isEndOfMonth,\n          [classes.rangeIntervalDayPreviewStart]: isStartOfPreviewing || isStartOfMonth,\n        })}\n      >\n        <Day\n          {...other}\n          disableMargin\n          allowSameDateSelection\n          allowKeyboardControl={false}\n          day={day}\n          selected={selected}\n          inCurrentMonth={inCurrentMonth}\n          data-mui-test=\"DateRangeDay\"\n          className={clsx(\n            classes.day,\n            {\n              [classes.notSelectedDate]: !selected,\n              [classes.dayOutsideRangeInterval]: !isHighlighting,\n              [classes.dayInsideRangeInterval]: !selected && isHighlighting,\n            },\n            className\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nPureDateRangeDay.displayName = 'DateRangeDay';\n\nexport const DateRangeDay = React.memo(PureDateRangeDay, (prevProps, nextProps) => {\n  return (\n    prevProps.isHighlighting === nextProps.isHighlighting &&\n    prevProps.isEndOfHighlighting === nextProps.isEndOfHighlighting &&\n    prevProps.isStartOfHighlighting === nextProps.isStartOfHighlighting &&\n    prevProps.isPreviewing === nextProps.isPreviewing &&\n    prevProps.isEndOfPreviewing === nextProps.isEndOfPreviewing &&\n    prevProps.isStartOfPreviewing === nextProps.isStartOfPreviewing &&\n    areDayPropsEqual(prevProps, nextProps)\n  );\n});\n","import * as React from 'react';\nimport { CalendarHeader } from '../views/Calendar/CalendarHeader';\nimport { DateRange } from './RangeTypes';\nimport { DateRangeDay } from './DateRangePickerDay';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { Calendar, CalendarProps } from '../views/Calendar/Calendar';\nimport { ExportedArrowSwitcherProps } from '../_shared/ArrowSwitcher';\nimport { defaultMinDate, defaultMaxDate } from '../constants/prop-types';\nimport { ExportedDesktopDateRangeCalendarProps } from './DateRangePickerViewDesktop';\nimport {\n  isWithinRange,\n  isStartOfRange,\n  isEndOfRange,\n  DateValidationProps,\n} from '../_helpers/date-utils';\n\nexport interface ExportedMobileDateRangeCalendarProps\n  extends Pick<ExportedDesktopDateRangeCalendarProps, 'renderDay'> {}\n\ninterface DesktopDateRangeCalendarProps\n  extends ExportedMobileDateRangeCalendarProps,\n    Omit<CalendarProps, 'renderDay'>,\n    DateValidationProps,\n    ExportedArrowSwitcherProps {\n  date: DateRange;\n  changeMonth: (date: unknown) => void;\n}\n\nconst onlyDateView = ['date'] as ['date'];\n\nexport const DateRangePickerViewMobile: React.FC<DesktopDateRangeCalendarProps> = ({\n  changeMonth,\n  date,\n  leftArrowButtonProps,\n  leftArrowButtonText,\n  leftArrowIcon,\n  maxDate: __maxDate,\n  minDate: __minDate,\n  onChange,\n  rightArrowButtonProps,\n  rightArrowButtonText,\n  rightArrowIcon,\n  renderDay = (_, props) => <DateRangeDay {...props} />,\n  ...other\n}) => {\n  const utils = useUtils();\n  const minDate = __minDate || utils.date(defaultMinDate);\n  const maxDate = __maxDate || utils.date(defaultMaxDate);\n\n  return (\n    <React.Fragment>\n      <CalendarHeader\n        view=\"date\"\n        views={onlyDateView}\n        changeView={() => ({})}\n        onMonthChange={changeMonth}\n        leftArrowButtonProps={leftArrowButtonProps}\n        leftArrowButtonText={leftArrowButtonText}\n        leftArrowIcon={leftArrowIcon}\n        rightArrowButtonProps={rightArrowButtonProps}\n        rightArrowButtonText={rightArrowButtonText}\n        rightArrowIcon={rightArrowIcon}\n        minDate={minDate}\n        maxDate={maxDate}\n        {...other}\n      />\n      <Calendar\n        {...other}\n        date={date}\n        onChange={onChange}\n        renderDay={(day, _, DayProps) =>\n          renderDay(day, {\n            isPreviewing: false,\n            isStartOfPreviewing: false,\n            isEndOfPreviewing: false,\n            isHighlighting: isWithinRange(utils, day, date),\n            isStartOfHighlighting: isStartOfRange(utils, day, date),\n            isEndOfHighlighting: isEndOfRange(utils, day, date),\n            ...DayProps,\n          })\n        }\n      />\n    </React.Fragment>\n  );\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { RangeInput, DateRange, CurrentlySelectingRangeEndProps } from './RangeTypes';\nimport { useMaskedInput } from '../_shared/hooks/useMaskedInput';\nimport { DateRangeValidationError } from '../_helpers/date-utils';\nimport { WrapperVariantContext } from '../wrappers/WrapperVariantContext';\nimport { mergeRefs, executeInTheNextEventLoopTick } from '../_helpers/utils';\nimport { DateInputProps, MuiTextFieldProps } from '../_shared/PureDateInput';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    root: {\n      display: 'flex',\n      alignItems: 'baseline',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n        alignItems: 'center',\n      },\n    },\n    toLabelDelimiter: {\n      margin: '8px 0',\n      [theme.breakpoints.up('sm')]: {\n        margin: '0 16px',\n      },\n    },\n  }),\n  { name: 'MuiPickersDateRangePickerInput' }\n);\n\nexport interface ExportedDateRangePickerInputProps {\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `startProps` and `endProps` arguments of this render prop contains props of [TextField](https://material-ui.com/api/text-field/#textfield-api),\n   * that you need to forward to the range start/end inputs respectively.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example\n   * ```jsx\n   * <DateRangePicker\n   * renderInput={(startProps, endProps) => (\n       <React.Fragment>\n         <TextField {...startProps} />\n         <Typography> to <Typography>\n         <TextField {...endProps} />\n       </React.Fragment>;\n     )}\n     />\n   * ````\n   */\n  renderInput: (startProps: MuiTextFieldProps, endProps: MuiTextFieldProps) => React.ReactElement;\n}\n\nexport interface DateRangeInputProps\n  extends ExportedDateRangePickerInputProps,\n    CurrentlySelectingRangeEndProps,\n    Omit<\n      DateInputProps<RangeInput<any>, DateRange<any>>,\n      'validationError' | 'renderInput' | 'forwardedRef'\n    > {\n  startText: React.ReactNode;\n  endText: React.ReactNode;\n  forwardedRef?: React.Ref<HTMLDivElement>;\n  containerRef?: React.Ref<HTMLDivElement>;\n  validationError: DateRangeValidationError;\n}\n\nexport const DateRangePickerInput: React.FC<DateRangeInputProps> = ({\n  containerRef,\n  currentlySelectingRangeEnd,\n  disableOpenPicker,\n  endText,\n  forwardedRef,\n  onBlur,\n  onChange,\n  open,\n  openPicker,\n  rawValue,\n  rawValue: [start, end],\n  readOnly,\n  renderInput,\n  setCurrentlySelectingRangeEnd,\n  startText,\n  TextFieldProps,\n  validationError: [startValidationError, endValidationError],\n  ...other\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n  const startRef = React.useRef<HTMLInputElement>(null);\n  const endRef = React.useRef<HTMLInputElement>(null);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n\n  React.useEffect(() => {\n    if (!open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start') {\n      startRef.current?.focus();\n    } else if (currentlySelectingRangeEnd === 'end') {\n      endRef.current?.focus();\n    }\n  }, [currentlySelectingRangeEnd, open]);\n\n  // TODO: rethink this approach. We do not need to wait for calendar to be updated to rerender input (looks like freezing)\n  // TODO: so simply break 1 react's commit phase in 2 (first for input and second for calendars) by executing onChange in the next tick\n  const lazyHandleChangeCallback = React.useCallback(\n    (...args: Parameters<typeof onChange>) =>\n      executeInTheNextEventLoopTick(() => onChange(...args)),\n    [onChange]\n  );\n\n  const handleStartChange = (date: unknown, inputString?: string) => {\n    lazyHandleChangeCallback([date, utils.date(end)], inputString);\n  };\n\n  const handleEndChange = (date: unknown, inputString?: string) => {\n    lazyHandleChangeCallback([utils.date(start), date], inputString);\n  };\n\n  const openRangeStartSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n    if (!disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openRangeEndSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n    if (!disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openOnFocus = wrapperVariant === 'desktop';\n  const startInputProps = useMaskedInput({\n    ...other,\n    readOnly,\n    rawValue: start,\n    onChange: handleStartChange,\n    label: startText,\n    validationError: startValidationError !== null,\n    TextFieldProps: {\n      ...TextFieldProps,\n      ref: startRef,\n      variant: 'outlined',\n      focused: open && currentlySelectingRangeEnd === 'start',\n    },\n    inputProps: {\n      onClick: !openOnFocus ? openRangeStartSelection : undefined,\n      onFocus: openOnFocus ? openRangeStartSelection : undefined,\n    },\n  });\n\n  const endInputProps = useMaskedInput({\n    ...other,\n    readOnly,\n    label: endText,\n    rawValue: end,\n    onChange: handleEndChange,\n    validationError: endValidationError !== null,\n    TextFieldProps: {\n      ...TextFieldProps,\n      ref: endRef,\n      variant: 'outlined',\n      focused: open && currentlySelectingRangeEnd === 'end',\n    },\n    inputProps: {\n      onClick: !openOnFocus ? openRangeEndSelection : undefined,\n      onFocus: openOnFocus ? openRangeEndSelection : undefined,\n    },\n  });\n\n  return (\n    <div onBlur={onBlur} className={classes.root} ref={mergeRefs([containerRef, forwardedRef])}>\n      {renderInput(startInputProps, endInputProps)}\n    </div>\n  );\n};\n\nDateRangePickerInput.propTypes = {\n  acceptRegex: PropTypes.instanceOf(RegExp),\n  getOpenDialogAriaText: PropTypes.func,\n  mask: PropTypes.string,\n  OpenPickerButtonProps: PropTypes.object,\n  openPickerIcon: PropTypes.node,\n  renderInput: PropTypes.func.isRequired,\n  rifmFormatter: PropTypes.func,\n};\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DateRange } from './RangeTypes';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { calculateRangePreview } from './date-range-manager';\nimport { Calendar, CalendarProps } from '../views/Calendar/Calendar';\nimport { DateRangeDay, DateRangeDayProps } from './DateRangePickerDay';\nimport { defaultMinDate, defaultMaxDate } from '../constants/prop-types';\nimport { ArrowSwitcher, ExportedArrowSwitcherProps } from '../_shared/ArrowSwitcher';\nimport {\n  usePreviousMonthDisabled,\n  useNextMonthDisabled,\n} from '../_shared/hooks/date-helpers-hooks';\nimport {\n  isWithinRange,\n  isStartOfRange,\n  isEndOfRange,\n  DateValidationProps,\n} from '../_helpers/date-utils';\n\nexport interface ExportedDesktopDateRangeCalendarProps {\n  /**\n   * How many calendars render on **desktop** DateRangePicker.\n   *\n   * @default 2\n   */\n  calendars?: 1 | 2 | 3;\n  /**\n   * Custom renderer for `<DateRangePicker />` days. @DateIOType\n   * @example (date, DateRangeDayProps) => <DateRangePickerDay {...DateRangeDayProps} />\n   */\n  renderDay?: (date: unknown, DateRangeDayProps: DateRangeDayProps) => JSX.Element;\n}\n\ninterface DesktopDateRangeCalendarProps\n  extends ExportedDesktopDateRangeCalendarProps,\n    Omit<CalendarProps, 'renderDay'>,\n    DateValidationProps,\n    ExportedArrowSwitcherProps {\n  date: DateRange;\n  changeMonth: (date: unknown) => void;\n  currentlySelectingRangeEnd: 'start' | 'end';\n}\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    rangeCalendarContainer: {\n      '&:not(:last-child)': {\n        borderRight: `2px solid ${theme.palette.divider}`,\n      },\n    },\n    calendar: {\n      minWidth: 312,\n      minHeight: 288,\n    },\n    arrowSwitcher: {\n      padding: '16px 16px 8px 16px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    },\n  }),\n  { name: 'MuiPickersDesktopDateRangeCalendar' }\n);\n\nfunction getCalendarsArray(calendars: ExportedDesktopDateRangeCalendarProps['calendars']) {\n  switch (calendars) {\n    case 1:\n      return [0];\n    case 2:\n      return [0, 0];\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n\nexport const DateRangePickerViewDesktop: React.FC<DesktopDateRangeCalendarProps> = ({\n  date,\n  calendars = 2,\n  changeMonth,\n  leftArrowButtonProps,\n  leftArrowButtonText,\n  leftArrowIcon,\n  rightArrowButtonProps,\n  rightArrowButtonText,\n  rightArrowIcon,\n  onChange,\n  disableFuture,\n  disablePast,\n  minDate: __minDate,\n  maxDate: __maxDate,\n  currentlySelectingRangeEnd,\n  currentMonth,\n  renderDay = (_, props) => <DateRangeDay {...props} />,\n  ...other\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n  const minDate = __minDate || utils.date(defaultMinDate);\n  const maxDate = __maxDate || utils.date(defaultMaxDate);\n\n  const [rangePreviewDay, setRangePreviewDay] = React.useState<unknown>(null);\n\n  const isNextMonthDisabled = useNextMonthDisabled(currentMonth, { disableFuture, maxDate });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, { disablePast, minDate });\n\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: date,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd,\n  });\n\n  const handleDayChange = React.useCallback(\n    (day: unknown) => {\n      setRangePreviewDay(null);\n      onChange(day);\n    },\n    [onChange]\n  );\n\n  const handlePreviewDayChange = (newPreviewRequest: unknown) => {\n    if (!isWithinRange(utils, newPreviewRequest, date)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  const CalendarTransitionProps = React.useMemo(\n    () => ({\n      onMouseLeave: () => setRangePreviewDay(null),\n    }),\n    []\n  );\n\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n\n  return (\n    <div className={classes.root}>\n      {getCalendarsArray(calendars).map((_, index) => {\n        const monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n\n        return (\n          <div key={index} className={classes.rangeCalendarContainer}>\n            <ArrowSwitcher\n              className={classes.arrowSwitcher}\n              onLeftClick={selectPreviousMonth}\n              onRightClick={selectNextMonth}\n              isLeftHidden={index !== 0}\n              isRightHidden={index !== calendars - 1}\n              isLeftDisabled={isPreviousMonthDisabled}\n              isRightDisabled={isNextMonthDisabled}\n              leftArrowButtonProps={leftArrowButtonProps}\n              leftArrowButtonText={leftArrowButtonText}\n              leftArrowIcon={leftArrowIcon}\n              rightArrowButtonProps={rightArrowButtonProps}\n              rightArrowButtonText={rightArrowButtonText}\n              rightArrowIcon={rightArrowIcon}\n              text={utils.format(monthOnIteration, 'monthAndYear')}\n            />\n            <Calendar\n              {...other}\n              key={index}\n              date={date}\n              className={classes.calendar}\n              onChange={handleDayChange}\n              currentMonth={monthOnIteration}\n              TransitionProps={CalendarTransitionProps}\n              renderDay={(day, __, DayProps) =>\n                renderDay(day, {\n                  isPreviewing: isWithinRange(utils, day, previewingRange),\n                  isStartOfPreviewing: isStartOfRange(utils, day, previewingRange),\n                  isEndOfPreviewing: isEndOfRange(utils, day, previewingRange),\n                  isHighlighting: isWithinRange(utils, day, date),\n                  isStartOfHighlighting: isStartOfRange(utils, day, date),\n                  isEndOfHighlighting: isEndOfRange(utils, day, date),\n                  onMouseEnter: () => handlePreviewDayChange(day),\n                  ...DayProps,\n                })\n              }\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { isRangeValid } from '../_helpers/date-utils';\nimport { BasePickerProps } from '../typings/BasePicker';\nimport { calculateRangeChange } from './date-range-manager';\nimport { useUtils, useNow } from '../_shared/hooks/useUtils';\nimport { SharedPickerProps } from '../Picker/SharedPickerProps';\nimport { DateRangePickerToolbar } from './DateRangePickerToolbar';\nimport { useParsedDate } from '../_shared/hooks/date-helpers-hooks';\nimport { useCalendarState } from '../views/Calendar/useCalendarState';\nimport { DateRangePickerViewMobile } from './DateRangePickerViewMobile';\nimport { defaultMaxDate, defaultMinDate } from '../constants/prop-types';\nimport { WrapperVariantContext } from '../wrappers/WrapperVariantContext';\nimport { MobileKeyboardInputView } from '../views/MobileKeyboardInputView';\nimport { DateRangePickerInput, DateRangeInputProps } from './DateRangePickerInput';\nimport { RangeInput, DateRange, CurrentlySelectingRangeEndProps } from './RangeTypes';\nimport { ExportedCalendarViewProps, defaultReduceAnimations } from '../views/Calendar/CalendarView';\nimport {\n  DateRangePickerViewDesktop,\n  ExportedDesktopDateRangeCalendarProps,\n} from './DateRangePickerViewDesktop';\n\ntype BaseCalendarPropsToReuse = Omit<ExportedCalendarViewProps, 'onYearChange' | 'renderDay'>;\n\nexport interface ExportedDateRangePickerViewProps\n  extends BaseCalendarPropsToReuse,\n    ExportedDesktopDateRangeCalendarProps,\n    Omit<BasePickerProps, 'value' | 'onChange'> {\n  /**\n   * if `true` after selecting `start` date  calendar will not automatically switch to the month of `end` date\n   *\n   * @default false\n   */\n  disableAutoMonthSwitching?: boolean;\n}\n\ninterface DateRangePickerViewProps<TDate = unknown>\n  extends ExportedDateRangePickerViewProps,\n    CurrentlySelectingRangeEndProps,\n    SharedPickerProps<RangeInput<TDate>, DateRange<TDate>, DateRangeInputProps> {\n  open: boolean;\n  startText: React.ReactNode;\n  endText: React.ReactNode;\n}\n\nexport const DateRangePickerView = <TDate extends unknown>({\n  calendars = 2,\n  className,\n  currentlySelectingRangeEnd,\n  date,\n  DateInputProps,\n  disableAutoMonthSwitching = false,\n  disableFuture,\n  disableHighlightToday,\n  disablePast,\n  endText,\n  isMobileKeyboardViewOpen,\n  maxDate: unparsedMaxDate = defaultMaxDate,\n  minDate: unparsedMinDate = defaultMinDate,\n  onDateChange,\n  onMonthChange,\n  open,\n  reduceAnimations = defaultReduceAnimations,\n  setCurrentlySelectingRangeEnd,\n  shouldDisableDate,\n  showToolbar,\n  startText,\n  toggleMobileKeyboardView,\n  toolbarFormat,\n  toolbarTitle,\n  ...other\n}: DateRangePickerViewProps<TDate>) => {\n  const now = useNow();\n  const utils = useUtils();\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const minDate = useParsedDate(unparsedMinDate)!;\n  const maxDate = useParsedDate(unparsedMaxDate)!;\n\n  const [start, end] = date;\n  const {\n    changeMonth,\n    calendarState,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    changeFocusedDay,\n  } = useCalendarState({\n    date: start || end || now,\n    minDate,\n    maxDate,\n    reduceAnimations,\n    disablePast,\n    disableFuture,\n    onMonthChange,\n    shouldDisableDate,\n    disableSwitchToMonthOnDayFocus: true,\n  });\n\n  const toShowToolbar = showToolbar ?? wrapperVariant !== 'desktop';\n\n  const scrollToDayIfNeeded = (day: unknown) => {\n    if (!utils.isValid(day) || isDateDisabled(day)) {\n      return;\n    }\n\n    const displayingMonthRange = wrapperVariant === 'mobile' ? 0 : calendars - 1;\n    const currentMonthNumber = utils.getMonth(calendarState.currentMonth);\n    const requestedMonthNumber = utils.getMonth(day);\n\n    if (\n      !utils.isSameYear(calendarState.currentMonth, day) ||\n      requestedMonthNumber < currentMonthNumber ||\n      requestedMonthNumber > currentMonthNumber + displayingMonthRange\n    ) {\n      const newMonth =\n        currentlySelectingRangeEnd === 'start'\n          ? start\n          : // If need to focus end, scroll to the state when \"end\" is displaying in the last calendar\n            utils.addMonths(end, -displayingMonthRange);\n\n      changeMonth(newMonth);\n    }\n  };\n\n  React.useEffect(() => {\n    if (disableAutoMonthSwitching || !open) {\n      return;\n    }\n\n    if (\n      (currentlySelectingRangeEnd === 'start' && start === null) ||\n      (currentlySelectingRangeEnd === 'end' && end === null)\n    ) {\n      return;\n    }\n\n    scrollToDayIfNeeded(currentlySelectingRangeEnd === 'start' ? start : end);\n  }, [currentlySelectingRangeEnd, date]); // eslint-disable-line\n\n  const handleChange = React.useCallback(\n    (newDate: unknown) => {\n      const { nextSelection, newRange } = calculateRangeChange({\n        newDate,\n        utils,\n        range: date,\n        currentlySelectingRangeEnd,\n      });\n\n      setCurrentlySelectingRangeEnd(nextSelection);\n\n      const isFullRangeSelected =\n        currentlySelectingRangeEnd === 'end' && isRangeValid(utils, newRange);\n\n      onDateChange(\n        newRange as DateRange<TDate>,\n        wrapperVariant,\n        isFullRangeSelected ? 'finish' : 'partial'\n      );\n    },\n    [\n      currentlySelectingRangeEnd,\n      date,\n      onDateChange,\n      setCurrentlySelectingRangeEnd,\n      utils,\n      wrapperVariant,\n    ]\n  );\n\n  const renderView = () => {\n    const sharedCalendarProps = {\n      date,\n      isDateDisabled,\n      changeFocusedDay,\n      onChange: handleChange,\n      reduceAnimations,\n      disableHighlightToday,\n      onMonthSwitchingAnimationEnd,\n      changeMonth,\n      currentlySelectingRangeEnd,\n      disableFuture,\n      disablePast,\n      minDate,\n      maxDate,\n      ...calendarState,\n      ...other,\n    };\n\n    switch (wrapperVariant) {\n      case 'desktop': {\n        return <DateRangePickerViewDesktop calendars={calendars} {...sharedCalendarProps} />;\n      }\n\n      default: {\n        return <DateRangePickerViewMobile {...sharedCalendarProps} />;\n      }\n    }\n  };\n\n  return (\n    <div className={className}>\n      {toShowToolbar && (\n        <DateRangePickerToolbar\n          date={date}\n          isMobileKeyboardViewOpen={isMobileKeyboardViewOpen}\n          toggleMobileKeyboardView={toggleMobileKeyboardView}\n          currentlySelectingRangeEnd={currentlySelectingRangeEnd}\n          setCurrentlySelectingRangeEnd={setCurrentlySelectingRangeEnd}\n          startText={startText}\n          endText={endText}\n          toolbarTitle={toolbarTitle}\n          toolbarFormat={toolbarFormat}\n        />\n      )}\n\n      {isMobileKeyboardViewOpen ? (\n        <MobileKeyboardInputView>\n          <DateRangePickerInput disableOpenPicker ignoreInvalidInputs {...DateInputProps} />\n        </MobileKeyboardInputView>\n      ) : (\n        renderView()\n      )}\n    </div>\n  );\n};\n\nDateRangePickerView.propTypes = {\n  calendars: PropTypes.oneOf([1, 2, 3]),\n  disableAutoMonthSwitching: PropTypes.bool,\n};\n","import Typography from '@material-ui/core/Typography';\nimport { styled } from '@material-ui/core/styles';\nimport { withDefaultProps } from '../_shared/withDefaultProps';\n\nexport const DateRangeDelimiter = withDefaultProps(\n  { name: 'MuiPickersDateRangeDelimiter' },\n  styled(Typography)({\n    margin: '0 16px',\n  })\n);\n\nexport type DateRangeDelimiterProps = React.ComponentProps<typeof DateRangeDelimiter>;\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { MobileWrapper } from '../wrappers/MobileWrapper';\nimport { withDefaultProps } from '../_shared/withDefaultProps';\nimport { useParsedDate } from '../_shared/hooks/date-helpers-hooks';\nimport { withDateAdapterProp } from '../_shared/withDateAdapterProp';\nimport { makeWrapperComponent } from '../wrappers/makeWrapperComponent';\nimport { ResponsiveTooltipWrapper } from '../wrappers/ResponsiveWrapper';\nimport { defaultMinDate, defaultMaxDate, date } from '../constants/prop-types';\nimport { DesktopTooltipWrapper } from '../wrappers/DesktopTooltipWrapper';\nimport { SomeWrapper, ExtendWrapper, StaticWrapper } from '../wrappers/Wrapper';\nimport { RangeInput, AllSharedDateRangePickerProps, DateRange } from './RangeTypes';\nimport { makeValidationHook, ValidationProps } from '../_shared/hooks/useValidation';\nimport { usePickerState, PickerStateValueManager } from '../_shared/hooks/usePickerState';\nimport { DateRangePickerView, ExportedDateRangePickerViewProps } from './DateRangePickerView';\nimport {\n  DateRangePickerInput,\n  ExportedDateRangePickerInputProps,\n  DateRangeInputProps,\n} from './DateRangePickerInput';\nimport {\n  parseRangeInputValue,\n  validateDateRange,\n  DateRangeValidationError,\n} from '../_helpers/date-utils';\n\nexport interface BaseDateRangePickerProps\n  extends ExportedDateRangePickerViewProps,\n    ValidationProps<DateRangeValidationError, RangeInput>,\n    ExportedDateRangePickerInputProps {\n  /**\n   * Text for start input label and toolbar placeholder\n   *\n   * @default \"Start\"\n   */\n  startText?: React.ReactNode;\n  /**\n   * Text for end input label and toolbar placeholder\n   *\n   * @default \"end\"\n   */\n  endText?: React.ReactNode;\n}\n\ntype RangePickerComponent<TWrapper extends SomeWrapper> = <TDate>(\n  props: BaseDateRangePickerProps &\n    ExtendWrapper<TWrapper> &\n    AllSharedDateRangePickerProps<TDate> &\n    React.RefAttributes<HTMLDivElement>\n) => JSX.Element;\n\nexport const useDateRangeValidation = makeValidationHook<\n  DateRangeValidationError,\n  RangeInput,\n  BaseDateRangePickerProps\n>(validateDateRange, {\n  defaultValidationError: [null, null],\n  isSameError: (a, b) => a[1] === b[1] && a[0] === b[0],\n});\n\nexport function makeRangePicker<TWrapper extends SomeWrapper>(\n  name: string,\n  Wrapper: TWrapper\n): RangePickerComponent<TWrapper> {\n  const WrapperComponent = makeWrapperComponent<DateRangeInputProps>(Wrapper, {\n    KeyboardDateInputComponent: DateRangePickerInput,\n    PureDateInputComponent: DateRangePickerInput,\n  });\n\n  const rangePickerValueManager: PickerStateValueManager<any, any> = {\n    emptyValue: [null, null],\n    parseInput: parseRangeInputValue,\n    areValuesEqual: (utils, a, b) => utils.isEqual(a[0], b[0]) && utils.isEqual(a[1], b[1]),\n  };\n\n  function RangePickerWithStateAndWrapper<TDate>({\n    calendars,\n    value,\n    onChange,\n    mask = '__/__/____',\n    startText = 'Start',\n    endText = 'End',\n    inputFormat: passedInputFormat,\n    minDate: __minDate = defaultMinDate,\n    maxDate: __maxDate = defaultMaxDate,\n    ...other\n  }: BaseDateRangePickerProps & AllSharedDateRangePickerProps<TDate> & ExtendWrapper<TWrapper>) {\n    const utils = useUtils();\n    const minDate = useParsedDate(__minDate);\n    const maxDate = useParsedDate(__maxDate);\n    const [currentlySelectingRangeEnd, setCurrentlySelectingRangeEnd] = React.useState<\n      'start' | 'end'\n    >('start');\n\n    const pickerStateProps = {\n      ...other,\n      value,\n      onChange,\n      inputFormat: passedInputFormat || utils.formats.keyboardDate,\n    };\n\n    const restProps = {\n      ...other,\n      minDate,\n      maxDate,\n    };\n\n    const { pickerProps, inputProps, wrapperProps } = usePickerState<\n      RangeInput<TDate>,\n      DateRange<TDate>\n    >(pickerStateProps, rangePickerValueManager);\n\n    const validationError = useDateRangeValidation(value, restProps);\n\n    const DateInputProps = {\n      ...inputProps,\n      ...restProps,\n      currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd,\n      startText,\n      endText,\n      mask,\n      validationError,\n    };\n\n    return (\n      <WrapperComponent wrapperProps={wrapperProps} DateInputProps={DateInputProps} {...restProps}>\n        <DateRangePickerView\n          open={wrapperProps.open}\n          DateInputProps={DateInputProps}\n          calendars={calendars}\n          currentlySelectingRangeEnd={currentlySelectingRangeEnd}\n          setCurrentlySelectingRangeEnd={setCurrentlySelectingRangeEnd}\n          startText={startText}\n          endText={endText}\n          {...pickerProps}\n          {...restProps}\n        />\n      </WrapperComponent>\n    );\n  }\n\n  RangePickerWithStateAndWrapper.propTypes = {\n    value: PropTypes.arrayOf(date).isRequired,\n    onChange: PropTypes.func.isRequired,\n    startText: PropTypes.node,\n    endText: PropTypes.node,\n  } as any;\n\n  const FinalPickerComponent = withDefaultProps(\n    { name },\n    withDateAdapterProp(RangePickerWithStateAndWrapper)\n  );\n\n  // @ts-ignore @see lib/src/Picker/makePickerWithState.tsx:95\n  return React.forwardRef<\n    HTMLDivElement,\n    React.ComponentProps<typeof RangePickerWithStateAndWrapper>\n  >((props, ref) => <FinalPickerComponent {...(props as any)} forwardedRef={ref} />);\n}\n\nexport const DateRangePicker = makeRangePicker(\n  'MuiPickersDateRangePicker',\n  ResponsiveTooltipWrapper\n);\n\nexport type DateRangePickerProps = React.ComponentProps<typeof DateRangePicker>;\n\nexport const DesktopDateRangePicker = makeRangePicker(\n  'MuiDesktopDateRangePicker',\n  DesktopTooltipWrapper\n);\n\nexport type DesktopDateRangePickerProps = React.ComponentProps<typeof DesktopDateRangePicker>;\n\nexport const MobileDateRangePicker = makeRangePicker('MuiMobileDateRangePicker', MobileWrapper);\n\nexport type MobileDateRangePickerProps = React.ComponentProps<typeof MobileDateRangePicker>;\n\nexport const StaticDateRangePicker = makeRangePicker('MuiStaticDateRangePicker', StaticWrapper);\n\nexport type StaticDateRangePickerProps = React.ComponentProps<typeof StaticDateRangePicker>;\n\nexport { DateRangeDelimiter } from './DateRangeDelimiter';\n"]},"metadata":{},"sourceType":"module"}