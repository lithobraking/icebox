{"ast":null,"code":"var _jsxFileName = \"/Users/parkernoble/Documents/coding/icebox/client/src/components/DisplayPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Post from './Post';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayPosts = () => {\n  _s();\n\n  const mockPosts = {\n    posts: [{\n      title: \"One\",\n      date: \"31 June 2021\",\n      body: \"Lorem ipsum blah blah blah something something\"\n    }, {\n      title: \"Two\",\n      date: \"31 June 2021\",\n      body: \"Lorem ipsum blah blah blah something something\"\n    }, {\n      title: \"Three\",\n      date: \"31 June 2021\",\n      body: \"Lorem ipsum blah blah blah something something\"\n    }, {\n      title: \"Four\",\n      date: \"31 June 2021\",\n      body: \"Lorem ipsum blah blah blah something something\"\n    }],\n    irrelevant: {\n      body: \"haha! I wasted your time!\"\n    }\n  };\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const getPosts = async () => {\n      const req = await axios.get('http://localhost:3001/api/v1/posts/');\n      setPosts(req.data);\n      return req; // .then((res) => {\n      //     setPosts(res.data);\n      //     console.log(posts);\n      // })\n      // .catch(error => console.log(error));\n    };\n\n    getPosts();\n  }, []);\n  console.log(posts);\n\n  if (posts.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Post, {\n            date: post.date,\n            body: post.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No posts to display yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(DisplayPosts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = DisplayPosts;\nexport default DisplayPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayPosts\");","map":{"version":3,"sources":["/Users/parkernoble/Documents/coding/icebox/client/src/components/DisplayPosts.js"],"names":["React","useState","useEffect","Post","axios","DisplayPosts","mockPosts","posts","title","date","body","irrelevant","setPosts","getPosts","req","get","data","console","log","length","map","post","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,SAAS,GAAG;AACdC,IAAAA,KAAK,EAAE,CAAC;AACJC,MAAAA,KAAK,EAAE,KADH;AAEJC,MAAAA,IAAI,EAAE,cAFF;AAGJC,MAAAA,IAAI,EAAE;AAHF,KAAD,EAKP;AACIF,MAAAA,KAAK,EAAE,KADX;AAEIC,MAAAA,IAAI,EAAE,cAFV;AAGIC,MAAAA,IAAI,EAAE;AAHV,KALO,EAUP;AACIF,MAAAA,KAAK,EAAE,OADX;AAEIC,MAAAA,IAAI,EAAE,cAFV;AAGIC,MAAAA,IAAI,EAAE;AAHV,KAVO,EAeP;AACIF,MAAAA,KAAK,EAAE,MADX;AAEIC,MAAAA,IAAI,EAAE,cAFV;AAGIC,MAAAA,IAAI,EAAE;AAHV,KAfO,CADO;AAqBdC,IAAAA,UAAU,EAAE;AACRD,MAAAA,IAAI,EAAE;AADE;AArBE,GAAlB;AAyBA,QAAM,CAACH,KAAD,EAAQK,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,QAAQ,GAAG,YAAY;AACzB,YAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,qCAAV,CAAlB;AACAH,MAAAA,QAAQ,CAACE,GAAG,CAACE,IAAL,CAAR;AACA,aAAOF,GAAP,CAHyB,CAIzB;AACA;AACA;AACA;AACA;AACH,KATD;;AAUAD,IAAAA,QAAQ;AAEX,GAbQ,EAaN,EAbM,CAAT;AAeAI,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;;AAEA,MAAIA,KAAK,CAACY,MAAN,GAAe,CAAnB,EAAsB;AAClB,wBACI;AAAA,gBACKZ,KAAK,CAACa,GAAN,CAAWC,IAAD,IAAU;AACjB,4BACI;AAAA,iCACI,QAAC,IAAD;AAEI,YAAA,IAAI,EAAEA,IAAI,CAACZ,IAFf;AAGI,YAAA,IAAI,EAAEY,IAAI,CAACX;AAHf;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUW,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAVA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GAhBD,MAgBO;AACH,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ,CAhED;;GAAMjB,Y;;KAAAA,Y;AAkEN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Post from './Post';\nimport axios from 'axios';\n\n\nconst DisplayPosts = () => {\n    const mockPosts = {\n        posts: [{\n            title: \"One\",\n            date: \"31 June 2021\",\n            body: \"Lorem ipsum blah blah blah something something\"\n        },\n        {\n            title: \"Two\",\n            date: \"31 June 2021\",\n            body: \"Lorem ipsum blah blah blah something something\"\n        },\n        {\n            title: \"Three\",\n            date: \"31 June 2021\",\n            body: \"Lorem ipsum blah blah blah something something\"\n        },\n        {\n            title: \"Four\",\n            date: \"31 June 2021\",\n            body: \"Lorem ipsum blah blah blah something something\"\n        }],\n        irrelevant: {\n            body: \"haha! I wasted your time!\"\n        }\n    }\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        const getPosts = async () => {\n            const req = await axios.get('http://localhost:3001/api/v1/posts/')\n            setPosts(req.data);\n            return req;\n            // .then((res) => {\n            //     setPosts(res.data);\n            //     console.log(posts);\n            // })\n            // .catch(error => console.log(error));\n        }\n        getPosts();\n\n    }, []);\n\n    console.log(posts);\n\n    if (posts.length > 0) {\n        return (\n            <div>\n                {posts.map((post) => {\n                    return (\n                        <div key={post.id}>\n                            <Post\n                                \n                                date={post.date}\n                                body={post.body}\n                            />\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    } else {\n        return <h3>No posts to display yet.</h3>\n    }\n}\n\nexport default DisplayPosts;"]},"metadata":{},"sourceType":"module"}