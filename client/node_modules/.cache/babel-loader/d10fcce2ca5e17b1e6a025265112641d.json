{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport React__default from 'react';\nimport 'prop-types';\nimport { u as useUtils } from './useUtils-e7fee764.js';\nimport 'clsx';\nimport '@material-ui/core/styles';\nimport '@material-ui/core/Typography';\nimport '@babel/runtime/helpers/esm/extends';\nimport '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport '@material-ui/core/Toolbar';\nimport '@material-ui/core/IconButton';\nimport '@material-ui/core/Grid';\nimport createSvgIcon from '@material-ui/core/internal/svg-icons/createSvgIcon';\nimport { T as TimePickerToolbar } from './ClockView-25e8625d.js';\nimport './ArrowSwitcher-f6719b68.js';\nimport './utils-6561b49e.js';\nimport './Calendar-56920e14.js';\nimport { m as makePickerWithStateAndWrapper, R as ResponsiveWrapper, D as DesktopWrapper, M as MobileWrapper, S as StaticWrapper, t as timePickerDefaultProps } from './Wrapper-785cedae.js';\nimport '@material-ui/core/useMediaQuery';\nimport '@material-ui/core/Button';\nimport '@material-ui/core/DialogActions';\nimport '@material-ui/core/DialogContent';\nimport '@material-ui/core/Dialog';\nimport './WrapperVariantContext-a1e3a213.js';\nimport '@material-ui/core/TextField';\nimport { p as pick12hOr24hFormat } from './Picker-d1f32b4d.js';\nimport '@material-ui/core/Popover';\nimport '@babel/runtime/helpers/esm/slicedToArray';\nimport '@material-ui/core/InputAdornment';\nimport 'rifm';\nimport './usePickerState-8b9a5864.js';\nimport './useKeyDown-fc9e6e07.js';\nimport '@babel/runtime/helpers/esm/classCallCheck';\nimport '@babel/runtime/helpers/esm/createClass';\nimport '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport '@babel/runtime/helpers/esm/getPrototypeOf';\nimport '@babel/runtime/helpers/esm/inherits';\nimport './Clock-30b8a92a.js';\nimport '@material-ui/core/ButtonBase';\nimport '@material-ui/core/styles/colorManipulator';\nimport '@material-ui/core/CircularProgress';\nimport 'react-transition-group';\nimport './Day.js';\nimport '@material-ui/core/Fade';\nvar ClockIcon = createSvgIcon(React__default.createElement(React__default.Fragment, null, React__default.createElement(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), React__default.createElement(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n})), 'ClockIcon');\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction getTextFieldAriaText(value, utils) {\n  return value && utils.isValid(utils.date(value)) ? \"Choose time, selected time is \".concat(utils.format(utils.date(value), 'fullTime')) : 'Choose time';\n}\n\nfunction useDefaultProps(_ref) {\n  var ampm = _ref.ampm,\n      mask = _ref.mask,\n      inputFormat = _ref.inputFormat,\n      _ref$openTo = _ref.openTo,\n      openTo = _ref$openTo === void 0 ? 'hours' : _ref$openTo,\n      _ref$views = _ref.views,\n      views = _ref$views === void 0 ? ['hours', 'minutes'] : _ref$views;\n  var utils = useUtils();\n  var willUseAmPm = ampm !== null && ampm !== void 0 ? ampm : utils.is12HourCycleInCurrentLocale();\n  return _objectSpread({}, timePickerDefaultProps, {\n    views: views,\n    openTo: openTo,\n    ampm: willUseAmPm,\n    acceptRegex: willUseAmPm ? /[\\dapAP]/gi : /\\d/gi,\n    mask: mask || willUseAmPm ? '__:__ _M' : '__:__',\n    getOpenDialogAriaText: getTextFieldAriaText,\n    keyboardIcon: React__default.createElement(ClockIcon, null),\n    inputFormat: pick12hOr24hFormat(inputFormat, ampm, {\n      localized: utils.formats.fullTime,\n      '12h': utils.formats.fullTime12h,\n      '24h': utils.formats.fullTime24h\n    })\n  });\n}\n\nvar TimePicker = makePickerWithStateAndWrapper(ResponsiveWrapper, {\n  useDefaultProps: useDefaultProps,\n  DefaultToolbarComponent: TimePickerToolbar\n});\nvar DesktopTimePicker = makePickerWithStateAndWrapper(DesktopWrapper, {\n  useDefaultProps: useDefaultProps,\n  DefaultToolbarComponent: TimePickerToolbar\n});\nvar MobileTimePicker = makePickerWithStateAndWrapper(MobileWrapper, {\n  useDefaultProps: useDefaultProps,\n  DefaultToolbarComponent: TimePickerToolbar\n});\nvar StaticTimePicker = makePickerWithStateAndWrapper(StaticWrapper, {\n  useDefaultProps: useDefaultProps,\n  DefaultToolbarComponent: TimePickerToolbar\n});\nexport { DesktopTimePicker, MobileTimePicker, StaticTimePicker, TimePicker, getTextFieldAriaText };","map":{"version":3,"sources":["../src/_shared/icons/ClockIcon.tsx","../src/TimePicker/TimePicker.tsx"],"names":["createSvgIcon","React","value","utils","ampm","mask","inputFormat","openTo","views","useUtils","willUseAmPm","acceptRegex","getOpenDialogAriaText","keyboardIcon","pick12hOr24hFormat","localized","fullTime24h","TimePicker","makePickerWithStateAndWrapper","useDefaultProps","DefaultToolbarComponent","TimePickerToolbar","DesktopTimePicker","MobileTimePicker","StaticTimePicker"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAA,SAAA,GAAeA,aAAa,CAC1B,cAAA,CAAA,aAAA,CAACC,cAAD,CAAA,QAAA,EAAA,IAAA,EACEA,cAAAA,CAAAA,aAAAA,CAAAA,MAAAA,EAAAA;AAAM,EAAA,CAAC,EAAC;AAARA,CAAAA,CADF,EAEEA,cAAAA,CAAAA,aAAAA,CAAAA,MAAAA,EAAAA;AAAM,EAAA,CAAC,EAAC;AAARA,CAAAA,CAFF,CAD0B,EAA5B,WAA4B,CAA5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaO,SAAA,oBAAA,CAAA,KAAA,EAAA,KAAA,EAA6E;SAC3EC,KAAK,IAAIC,KAAK,CAALA,OAAAA,CAAcA,KAAK,CAALA,IAAAA,CAAvBD,KAAuBC,CAAdA,CAATD,GAAAA,iCAAAA,MAAAA,CAC8BC,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAALA,IAAAA,CAAbA,KAAaA,CAAbA,EAD9BD,UAC8BC,CAD9BD,CAAAA,GAAP,a;;;AAKF,SAAA,eAAA,CAAA,IAAA,EAM2C;MALzCE,IAKyC,GAAA,IAAA,CALzCA,I;MACAC,IAIyC,GAAA,IAAA,CAJzCA,I;MACAC,WAGyC,GAAA,IAAA,CAHzCA,W;yBACAC,M;MAAAA,MAEyC,GAAA,WAAA,KAAA,KAAA,CAAA,GAFhC,OAEgC,GAAA,W;wBADzCC,K;MAAAA,KACyC,GAAA,UAAA,KAAA,KAAA,CAAA,GADjC,CAAA,OAAA,EAAA,SAAA,CACiC,GAAA,U;MACnCL,KAAK,GAAGM,QAAd,E;MACMC,WAAW,GAAGN,IAAH,KAAA,IAAGA,IAAAA,IAAH,KAAA,KAAA,CAAGA,GAAH,IAAGA,GAAQD,KAAK,CAAjC,4BAA4BA,E;2BAE5B,sB,EAAA;AAEEK,IAAAA,KAAK,EAFP,KAAA;AAGED,IAAAA,MAAM,EAHR,MAAA;AAIEH,IAAAA,IAAI,EAJN,WAAA;AAKEO,IAAAA,WAAW,EAAED,WAAW,GAAA,YAAA,GAL1B,MAAA;AAMEL,IAAAA,IAAI,EAAEA,IAAI,IAAJA,WAAAA,GAAAA,UAAAA,GANR,OAAA;AAOEO,IAAAA,qBAAqB,EAPvB,oBAAA;AAQEC,IAAAA,YAAY,EAAEZ,cAAAA,CAAAA,aAAAA,CAAAA,SAAAA,EARhB,IAQgBA,CARhB;AASEK,IAAAA,WAAW,EAAEQ,kBAAkB,CAAA,WAAA,EAAA,IAAA,EAAoB;AACjDC,MAAAA,SAAS,EAAEZ,KAAK,CAALA,OAAAA,CADsC,QAAA;aAE1CA,KAAK,CAALA,OAAAA,CAF0C,WAAA;aAG1CA,KAAK,CAALA,OAAAA,CAAca;AAH4B,KAApB;AATjC,G;;;AAiBF,IAAaC,UAAU,GAAGC,6BAA6B,CAAA,iBAAA,EAAqC;AAC1FC,EAAAA,eAAe,EAD2E,eAAA;AAE1FC,EAAAA,uBAAuB,EAAEC;AAFiE,CAArC,CAAvD;AAKA,IAAaC,iBAAiB,GAAGJ,6BAA6B,CAAA,cAAA,EAAiC;AAC7FC,EAAAA,eAAe,EAD8E,eAAA;AAE7FC,EAAAA,uBAAuB,EAAEC;AAFoE,CAAjC,CAA9D;AAKA,IAAaE,gBAAgB,GAAGL,6BAA6B,CAAA,aAAA,EAAgC;AAC3FC,EAAAA,eAAe,EAD4E,eAAA;AAE3FC,EAAAA,uBAAuB,EAAEC;AAFkE,CAAhC,CAA7D;AAKA,IAAaG,gBAAgB,GAAGN,6BAA6B,CAAA,aAAA,EAAiC;AAC5FC,EAAAA,eAAe,EAD6E,eAAA;AAE5FC,EAAAA,uBAAuB,EAAEC;AAFmE,CAAjC,CAA7D","sourcesContent":["import React from 'react';\nimport createSvgIcon from '@material-ui/core/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n  <React.Fragment>\n    <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" />\n    <path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\" />\n  </React.Fragment>,\n  'ClockIcon'\n);\n","import React from 'react';\nimport ClockIcon from '../_shared/icons/ClockIcon';\nimport { TimePickerToolbar } from './TimePickerToolbar';\nimport { ExportedClockViewProps } from '../views/Clock/ClockView';\nimport { ResponsiveWrapper } from '../wrappers/ResponsiveWrapper';\nimport { pick12hOr24hFormat } from '../_helpers/text-field-helper';\nimport { useUtils, MuiPickersAdapter } from '../_shared/hooks/useUtils';\nimport { makePickerWithStateAndWrapper } from '../Picker/makePickerWithState';\nimport { timePickerDefaultProps, ParsableDate } from '../constants/prop-types';\nimport { ModalWrapper, InlineWrapper, StaticWrapper } from '../wrappers/Wrapper';\nimport { WithViewsProps, AllSharedPickerProps } from '../Picker/SharedPickerProps';\n\nexport interface TimePickerProps\n  extends ExportedClockViewProps,\n    WithViewsProps<'hours' | 'minutes' | 'seconds'> {}\n\nexport function getTextFieldAriaText(value: ParsableDate, utils: MuiPickersAdapter) {\n  return value && utils.isValid(utils.date(value))\n    ? `Choose time, selected time is ${utils.format(utils.date(value), 'fullTime')}`\n    : 'Choose time';\n}\n\nfunction useDefaultProps({\n  ampm,\n  mask,\n  inputFormat,\n  openTo = 'hours',\n  views = ['hours', 'minutes'],\n}: TimePickerProps & AllSharedPickerProps) {\n  const utils = useUtils();\n  const willUseAmPm = ampm ?? utils.is12HourCycleInCurrentLocale();\n\n  return {\n    ...timePickerDefaultProps,\n    views,\n    openTo,\n    ampm: willUseAmPm,\n    acceptRegex: willUseAmPm ? /[\\dapAP]/gi : /\\d/gi,\n    mask: mask || willUseAmPm ? '__:__ _M' : '__:__',\n    getOpenDialogAriaText: getTextFieldAriaText,\n    keyboardIcon: <ClockIcon />,\n    inputFormat: pick12hOr24hFormat(inputFormat, ampm, {\n      localized: utils.formats.fullTime,\n      '12h': utils.formats.fullTime12h,\n      '24h': utils.formats.fullTime24h,\n    }),\n  };\n}\n\nexport const TimePicker = makePickerWithStateAndWrapper<TimePickerProps>(ResponsiveWrapper, {\n  useDefaultProps,\n  DefaultToolbarComponent: TimePickerToolbar,\n});\n\nexport const DesktopTimePicker = makePickerWithStateAndWrapper<TimePickerProps>(InlineWrapper, {\n  useDefaultProps,\n  DefaultToolbarComponent: TimePickerToolbar,\n});\n\nexport const MobileTimePicker = makePickerWithStateAndWrapper<TimePickerProps>(ModalWrapper, {\n  useDefaultProps,\n  DefaultToolbarComponent: TimePickerToolbar,\n});\n\nexport const StaticTimePicker = makePickerWithStateAndWrapper<TimePickerProps>(StaticWrapper, {\n  useDefaultProps,\n  DefaultToolbarComponent: TimePickerToolbar,\n});\n"]},"metadata":{},"sourceType":"module"}