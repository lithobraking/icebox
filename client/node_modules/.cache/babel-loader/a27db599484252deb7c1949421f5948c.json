{"ast":null,"code":"var _jsxFileName = \"/Users/marcallen/Documents/coding/ado-project/icebox/src/components/EntryForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MomentUtils from '@date-io/moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Checkbox, FormControl, FormControlLabel, Grid, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '50%',\n      height: theme.spacing(16)\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 150\n  }\n}));\n\nconst EntryForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const [selectedDate, setSelectedDate] = useState(Date.now());\n  const [feedbackType, setFeedbackType] = useState('');\n  const [anonymous, setAnonymous] = useState(false);\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  const handleFeedbackTypeChange = type => {\n    setFeedbackType(type.target.value);\n  };\n\n  const handleAnonClick = event => {\n    setAnonymous(event.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: MomentUtils,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"space-around\",\n          children: [/*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            disableToolbar: true,\n            variant: \"inline\",\n            format: \"MM/DD/yyyy\",\n            margin: \"normal\",\n            label: \"feedback-date\",\n            value: selectedDate,\n            onChange: handleDateChange,\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"type-select-label\",\n              children: \"Feedback Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"type-select-label\",\n              value: feedbackType,\n              onChange: handleFeedbackTypeChange,\n              label: \"Feedback Type\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"----\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"praise\",\n                children: \"Praise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"complaint\",\n                children: \"Complaint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"peer review\",\n                children: \"Peer Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"comment\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"request\",\n                children: \"Request\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: anonymous,\n              onChange: handleAnonClick,\n              name: \"anonymousCheckbox\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this),\n            label: \"Submit Anonymously?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EntryForm, \"yZg4gfoyfobqeojT57cDBYZ05B8=\", false, function () {\n  return [useStyles];\n});\n\n_c = EntryForm;\nexport default EntryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryForm\");","map":{"version":3,"sources":["/Users/marcallen/Documents/coding/ado-project/icebox/src/components/EntryForm.js"],"names":["React","useState","MomentUtils","makeStyles","Paper","Checkbox","FormControl","FormControlLabel","Grid","InputLabel","MenuItem","Select","Typography","MuiPickersUtilsProvider","KeyboardDatePicker","useStyles","theme","root","width","display","justifyContent","flexWrap","margin","spacing","height","formControl","minWidth","EntryForm","classes","selectedDate","setSelectedDate","Date","now","feedbackType","setFeedbackType","anonymous","setAnonymous","handleDateChange","date","handleFeedbackTypeChange","type","target","value","handleAnonClick","event","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport MomentUtils from '@date-io/moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Checkbox, FormControl, FormControlLabel, Grid, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '50%',\n            height: theme.spacing(16),\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 150,\n    },\n}));\n\nconst EntryForm = () => {\n    const classes = useStyles();\n    const [selectedDate, setSelectedDate] = useState(Date.now());\n    const [feedbackType, setFeedbackType] = useState('');\n    const [anonymous, setAnonymous] = useState(false);\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n    };\n\n    const handleFeedbackTypeChange = (type) => {\n        setFeedbackType(type.target.value);\n    };\n\n    const handleAnonClick = (event) => {\n        setAnonymous(event.target.checked);\n    };\n\n\n    return (\n        <form className={classes.root}>\n            <Paper elevation={3}>\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n                    <Grid\n                        container\n                        justify='space-around'\n                    >\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant='inline'\n                            format='MM/DD/yyyy'\n                            margin='normal'\n                            label='feedback-date'\n                            value={selectedDate}\n                            onChange={handleDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        <FormControl variant='outlined' className={classes.formControl}>\n                            <InputLabel id='type-select-label'>Feedback Type</InputLabel>\n                            <Select\n                                labelId='type-select-label'\n                                value={feedbackType}\n                                onChange={handleFeedbackTypeChange}\n                                label='Feedback Type'\n                            >\n                                <MenuItem value=''>\n                                    ----\n                                    </MenuItem>\n                                <MenuItem value='praise'>Praise</MenuItem>\n                                <MenuItem value='complaint'>Complaint</MenuItem>\n                                <MenuItem value='peer review'>Peer Review</MenuItem>\n                                <MenuItem value='comment'>Comment</MenuItem>\n                                <MenuItem value='request'>Request</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={anonymous}\n                                    onChange={handleAnonClick}\n                                    name='anonymousCheckbox'\n                                    color='primary'\n                                />\n                            }\n                            label='Submit Anonymously?'\n                        />\n                    </Grid>\n                </MuiPickersUtilsProvider>\n            </Paper>\n        </form>\n    )\n}\n\nexport default EntryForm;"]},"metadata":{},"sourceType":"module"}